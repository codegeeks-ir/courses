
AVRASM ver. 2.1.30  D:\MicroLab\P4-LCD\List\LCD.asm Tue Nov 17 16:56:04 2020

D:\MicroLab\P4-LCD\List\LCD.asm(1059): warning: Register r5 already defined by the .DEF directive
D:\MicroLab\P4-LCD\List\LCD.asm(1060): warning: Register r4 already defined by the .DEF directive
D:\MicroLab\P4-LCD\List\LCD.asm(1061): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Evaluation
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8/000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0061 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4e52
00002b 4d2d
00002c 4349
00002d 4f52      	.DB  0x52,0x4E,0x2D,0x4D,0x49,0x43,0x52,0x4F
00002e 002b
00002f 7777
000030 2e77
000031 6172      	.DB  0x2B,0x0,0x77,0x77,0x77,0x2E,0x72,0x61
000032 6179
000033 6e6e
000034 6b69
000035 632e      	.DB  0x79,0x61,0x6E,0x6E,0x69,0x6B,0x2E,0x63
000036 6d6f
000037 5500
000038 5455
000039 7700      	.DB  0x6F,0x6D,0x0,0x55,0x55,0x54,0x0,0x77
00003a 7777
00003b 752e
00003c 7475
00003d 612e      	.DB  0x77,0x77,0x2E,0x75,0x75,0x74,0x2E,0x61
00003e 2e63
00003f 7269
000040 4d00
000041 6369      	.DB  0x63,0x2E,0x69,0x72,0x0,0x4D,0x69,0x63
000042 6f72
000043 4100
000044 6d74
000045 6765      	.DB  0x72,0x6F,0x0,0x41,0x74,0x6D,0x65,0x67
000046 3161
000047 0036
000048 6f53
000049 656d      	.DB  0x61,0x31,0x36,0x0,0x53,0x6F,0x6D,0x65
00004a 6220
00004b 696c
00004c 6b6e
00004d 2120      	.DB  0x20,0x62,0x6C,0x69,0x6E,0x6B,0x20,0x21
00004e 3b00
00004f 0044      	.DB  0x0,0x3B,0x44,0x0
                 _0x2000003:
000050 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000051 0006      	.DW  0x06
000052 0160      	.DW  _0x6
000053 0081      	.DW  _0x0*2+45
                 
000054 0009      	.DW  0x09
000055 0166      	.DW  _0x6+6
000056 0087      	.DW  _0x0*2+51
                 
000057 000d      	.DW  0x0D
000058 016f      	.DW  _0x6+15
000059 0090      	.DW  _0x0*2+60
                 
00005a 0003      	.DW  0x03
00005b 017c      	.DW  _0x6+28
00005c 009d      	.DW  _0x0*2+73
                 
00005d 0002      	.DW  0x02
00005e 017f      	.DW  __base_y_G100
00005f 00a0      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000060 0000      	.DW  0
                 
                 __RESET:
000061 94f8      	CLI
000062 27ee      	CLR  R30
000063 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000064 e0f1      	LDI  R31,1
000065 bffb      	OUT  GICR,R31
000066 bfeb      	OUT  GICR,R30
000067 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000068 e1f8      	LDI  R31,0x18
000069 bdf1      	OUT  WDTCR,R31
00006a bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00006b e08d      	LDI  R24,(14-2)+1
00006c e0a2      	LDI  R26,2
00006d 27bb      	CLR  R27
                 __CLEAR_REG:
00006e 93ed      	ST   X+,R30
00006f 958a      	DEC  R24
000070 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000071 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000072 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000073 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000074 93ed      	ST   X+,R30
000075 9701      	SBIW R24,1
000076 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000077 eae2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000078 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000079 9185      	LPM  R24,Z+
00007a 9195      	LPM  R25,Z+
00007b 9700      	SBIW R24,0
00007c f061      	BREQ __GLOBAL_INI_END
00007d 91a5      	LPM  R26,Z+
00007e 91b5      	LPM  R27,Z+
00007f 9005      	LPM  R0,Z+
000080 9015      	LPM  R1,Z+
000081 01bf      	MOVW R22,R30
000082 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000083 9005      	LPM  R0,Z+
000084 920d      	ST   X+,R0
000085 9701      	SBIW R24,1
000086 f7e1      	BRNE __GLOBAL_INI_LOOP
000087 01fb      	MOVW R30,R22
000088 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000089 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008a bfed      	OUT  SPL,R30
00008b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008f 940c 00d0 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : LCD
                 ;Version :
                 ;Date    : 17/11/2020
                 ;Author  : Freeware, for evaluation and non-commercial use only
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8/000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <string.h>
                 ;
                 ;
                 ;void ShowInCenter(const char *firstRow , const char *secondRow)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _ShowInCenter:
                 ; 0000 001A       unsigned char offset;
                 ; 0000 001B       lcd_clear();
000091 931a      	ST   -Y,R17
                 ;	*firstRow -> Y+3
                 ;	*secondRow -> Y+1
                 ;	offset -> R17
000092 d0a9      	RCALL _lcd_clear
                 ; 0000 001C 
                 ; 0000 001D       offset = (16 - strlen(firstRow)) / 2;
000093 940e 01b7 	CALL SUBOPT_0x0
000095 940e 01bc 	CALL SUBOPT_0x1
                 ; 0000 001E       lcd_gotoxy(offset,0);
000097 e0e0      	LDI  R30,LOW(0)
000098 93ea      	ST   -Y,R30
000099 d095      	RCALL _lcd_gotoxy
                 ; 0000 001F       lcd_puts(firstRow);
00009a 940e 01b7 	CALL SUBOPT_0x0
00009c 940e 01c8 	CALL SUBOPT_0x2
                 ; 0000 0020       delay_ms(200);
                 ; 0000 0021 
                 ; 0000 0022       offset = (16 - strlen(secondRow)) / 2;
00009e 81e9      	LDD  R30,Y+1
00009f 81fa      	LDD  R31,Y+1+1
0000a0 93fa      	ST   -Y,R31
0000a1 93ea      	ST   -Y,R30
0000a2 940e 01bc 	CALL SUBOPT_0x1
                 ; 0000 0023       lcd_gotoxy(offset,1);
0000a4 940e 01d0 	CALL SUBOPT_0x3
                 ; 0000 0024       lcd_puts(secondRow);
0000a6 81e9      	LDD  R30,Y+1
0000a7 81fa      	LDD  R31,Y+1+1
0000a8 93fa      	ST   -Y,R31
0000a9 93ea      	ST   -Y,R30
0000aa 940e 01c8 	CALL SUBOPT_0x2
                 ; 0000 0025       delay_ms(200);
                 ; 0000 0026 }
0000ac c020      	RJMP _0x2040003
                 ;void Show(const char *firstRow , const char *secondRow)
                 ; 0000 0028 {
                 _Show:
                 ; 0000 0029       lcd_gotoxy(0,0);
                 ;	*firstRow -> Y+2
                 ;	*secondRow -> Y+0
0000ad 940e 01d4 	CALL SUBOPT_0x4
                 ; 0000 002A       lcd_puts(firstRow);
0000af 81ea      	LDD  R30,Y+2
0000b0 81fb      	LDD  R31,Y+2+1
0000b1 93fa      	ST   -Y,R31
0000b2 93ea      	ST   -Y,R30
0000b3 d0aa      	RCALL _lcd_puts
                 ; 0000 002B 
                 ; 0000 002C       lcd_gotoxy(0,1);
0000b4 940e 01d9 	CALL SUBOPT_0x5
                 ; 0000 002D       lcd_puts(secondRow);
0000b6 81e8      	LD   R30,Y
0000b7 81f9      	LDD  R31,Y+1
0000b8 93fa      	ST   -Y,R31
0000b9 93ea      	ST   -Y,R30
0000ba d0a3      	RCALL _lcd_puts
                 ; 0000 002E }
0000bb 9624      	ADIW R28,4
0000bc 9508      	RET
                 ;void Blink(const char *firstRow , const char *secondRow)
                 ; 0000 0030 {
                 _Blink:
                 ; 0000 0031       unsigned char index;
                 ; 0000 0032       for(index = 0; index < 100; index++)
0000bd 931a      	ST   -Y,R17
                 ;	*firstRow -> Y+3
                 ;	*secondRow -> Y+1
                 ;	index -> R17
0000be e010      	LDI  R17,LOW(0)
                 _0x4:
0000bf 3614      	CPI  R17,100
0000c0 f460      	BRSH _0x5
                 ; 0000 0033       {
                 ; 0000 0034             lcd_clear();
0000c1 d07a      	RCALL _lcd_clear
                 ; 0000 0035             delay_ms(20);
0000c2 940e 01dc 	CALL SUBOPT_0x6
                 ; 0000 0036             Show(firstRow , secondRow);
0000c4 940e 01b7 	CALL SUBOPT_0x0
0000c6 940e 01b7 	CALL SUBOPT_0x0
0000c8 dfe4      	RCALL _Show
                 ; 0000 0037             delay_ms(20);
0000c9 940e 01dc 	CALL SUBOPT_0x6
                 ; 0000 0038       }
0000cb 5f1f      	SUBI R17,-1
0000cc cff2      	RJMP _0x4
                 _0x5:
                 ; 0000 0039 }
                 _0x2040003:
0000cd 8118      	LDD  R17,Y+0
0000ce 9625      	ADIW R28,5
0000cf 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 003C {
                 _main:
                 ; 0000 003D       // Alphanumeric LCD initialization
                 ; 0000 003E       // Connections specified in the
                 ; 0000 003F       // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0040       // RS - PORTA Bit 0
                 ; 0000 0041       // RD - PORTA Bit 1
                 ; 0000 0042       // EN - PORTA Bit 2
                 ; 0000 0043       // D4 - PORTA Bit 4
                 ; 0000 0044       // D5 - PORTA Bit 5
                 ; 0000 0045       // D6 - PORTA Bit 6
                 ; 0000 0046       // D7 - PORTA Bit 7
                 ; 0000 0047       // Characters/line: 16
                 ; 0000 0048       lcd_init(16);
0000d0 e1e0      	LDI  R30,LOW(16)
0000d1 93ea      	ST   -Y,R30
0000d2 d0a9      	RCALL _lcd_init
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B       lcd_gotoxy(0,0);
0000d3 940e 01d4 	CALL SUBOPT_0x4
                 ; 0000 004C       lcd_putsf("RN-MICRO+");
                +
0000d5 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000d7 940e 01e2 	CALL SUBOPT_0x7
                 ; 0000 004D       delay_ms(200);
                 ; 0000 004E       lcd_gotoxy(0,1);
0000d9 940e 01d9 	CALL SUBOPT_0x5
                 ; 0000 004F       lcd_putsf("www.rayannik.com");
                +
0000db e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
0000dc e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
0000dd 940e 01e2 	CALL SUBOPT_0x7
                 ; 0000 0050       delay_ms(200);
                 ; 0000 0051 
                 ; 0000 0052       // Answer of question 1
                 ; 0000 0053       lcd_clear();
0000df d05c      	RCALL _lcd_clear
                 ; 0000 0054       lcd_putsf("UUT");
                +
0000e0 e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 27 ) )
0000e1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW1FN _0x0,27
0000e2 940e 01e2 	CALL SUBOPT_0x7
                 ; 0000 0055       delay_ms(200);
                 ; 0000 0056       lcd_gotoxy(0,1);
0000e4 940e 01d9 	CALL SUBOPT_0x5
                 ; 0000 0057       lcd_putsf("www.uut.ac.ir");
                +
0000e6 e7e3     +LDI R30 , LOW ( 2 * _0x0 + ( 31 ) )
0000e7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW1FN _0x0,31
0000e8 940e 01e2 	CALL SUBOPT_0x7
                 ; 0000 0058       delay_ms(200);
                 ; 0000 0059 
                 ; 0000 005A       // Answer of question 2
                 ; 0000 005B       ShowInCenter("Micro" , "Atmega16");
                +
0000ea e6e0     +LDI R30 , LOW ( _0x6 + ( 0 ) )
0000eb e0f1     +LDI R31 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW1MN _0x6,0
0000ec 93fa      	ST   -Y,R31
0000ed 93ea      	ST   -Y,R30
                +
0000ee e6e6     +LDI R30 , LOW ( _0x6 + ( 6 ) )
0000ef e0f1     +LDI R31 , HIGH ( _0x6 + ( 6 ) )
                 	__POINTW1MN _0x6,6
0000f0 93fa      	ST   -Y,R31
0000f1 93ea      	ST   -Y,R30
0000f2 df9e      	RCALL _ShowInCenter
                 ; 0000 005C 
                 ; 0000 005D       // Answer of question 3
                 ; 0000 005E       Blink("Some blink !" , ";D");
                +
0000f3 e6ef     +LDI R30 , LOW ( _0x6 + ( 15 ) )
0000f4 e0f1     +LDI R31 , HIGH ( _0x6 + ( 15 ) )
                 	__POINTW1MN _0x6,15
0000f5 93fa      	ST   -Y,R31
0000f6 93ea      	ST   -Y,R30
                +
0000f7 e7ec     +LDI R30 , LOW ( _0x6 + ( 28 ) )
0000f8 e0f1     +LDI R31 , HIGH ( _0x6 + ( 28 ) )
                 	__POINTW1MN _0x6,28
0000f9 93fa      	ST   -Y,R31
0000fa 93ea      	ST   -Y,R30
0000fb dfc1      	RCALL _Blink
                 ; 0000 005F 
                 ; 0000 0060       while (1)
                 _0x7:
                 ; 0000 0061       {
                 ; 0000 0062 
                 ; 0000 0063       }
0000fc cfff      	RJMP _0x7
                 ; 0000 0064 }
                 _0xA:
0000fd cfff      	RJMP _0xA
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x1F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0000fe 81e8      	LD   R30,Y
0000ff 71e0      	ANDI R30,LOW(0x10)
000100 f011      	BREQ _0x2000004
000101 9adc      	SBI  0x1B,4
000102 c001      	RJMP _0x2000005
                 _0x2000004:
000103 98dc      	CBI  0x1B,4
                 _0x2000005:
000104 81e8      	LD   R30,Y
000105 72e0      	ANDI R30,LOW(0x20)
000106 f011      	BREQ _0x2000006
000107 9add      	SBI  0x1B,5
000108 c001      	RJMP _0x2000007
                 _0x2000006:
000109 98dd      	CBI  0x1B,5
                 _0x2000007:
00010a 81e8      	LD   R30,Y
00010b 74e0      	ANDI R30,LOW(0x40)
00010c f011      	BREQ _0x2000008
00010d 9ade      	SBI  0x1B,6
00010e c001      	RJMP _0x2000009
                 _0x2000008:
00010f 98de      	CBI  0x1B,6
                 _0x2000009:
000110 81e8      	LD   R30,Y
000111 78e0      	ANDI R30,LOW(0x80)
000112 f011      	BREQ _0x200000A
000113 9adf      	SBI  0x1B,7
000114 c001      	RJMP _0x200000B
                 _0x200000A:
000115 98df      	CBI  0x1B,7
                 _0x200000B:
                +
000116 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000117 958a     +DEC R24
000118 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000119 9ada      	SBI  0x1B,2
                +
00011a e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00011b 958a     +DEC R24
00011c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00011d 98da      	CBI  0x1B,2
                +
00011e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00011f 958a     +DEC R24
000120 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000121 c089      	RJMP _0x2040001
                 __lcd_write_data:
000122 81e8      	LD   R30,Y
000123 93ea      	ST   -Y,R30
000124 dfd9      	RCALL __lcd_write_nibble_G100
000125 81e8          ld    r30,y
000126 95e2          swap  r30
000127 83e8          st    y,r30
000128 81e8      	LD   R30,Y
000129 93ea      	ST   -Y,R30
00012a dfd3      	RCALL __lcd_write_nibble_G100
                +
00012b e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00012c 958a     +DEC R24
00012d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00012e c07c      	RJMP _0x2040001
                 _lcd_gotoxy:
00012f 81e8      	LD   R30,Y
000130 e0f0      	LDI  R31,0
000131 58e1      	SUBI R30,LOW(-__base_y_G100)
000132 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000133 81e0      	LD   R30,Z
000134 81a9      	LDD  R26,Y+1
000135 0fea      	ADD  R30,R26
000136 93ea      	ST   -Y,R30
000137 dfea      	RCALL __lcd_write_data
000138 8059      	LDD  R5,Y+1
000139 8048      	LDD  R4,Y+0
00013a 9622      	ADIW R28,2
00013b 9508      	RET
                 _lcd_clear:
00013c e0e2      	LDI  R30,LOW(2)
00013d 940e 01ec 	CALL SUBOPT_0x8
00013f e0ec      	LDI  R30,LOW(12)
000140 93ea      	ST   -Y,R30
000141 dfe0      	RCALL __lcd_write_data
000142 e0e1      	LDI  R30,LOW(1)
000143 940e 01ec 	CALL SUBOPT_0x8
000145 e0e0      	LDI  R30,LOW(0)
000146 2e4e      	MOV  R4,R30
000147 2e5e      	MOV  R5,R30
000148 9508      	RET
                 _lcd_putchar:
000149 81a8      	LD   R26,Y
00014a 30aa      	CPI  R26,LOW(0xA)
00014b f011      	BREQ _0x2000011
00014c 1457      	CP   R5,R7
00014d f048      	BRLO _0x2000010
                 _0x2000011:
00014e e0e0      	LDI  R30,LOW(0)
00014f 93ea      	ST   -Y,R30
000150 9443      	INC  R4
000151 924a      	ST   -Y,R4
000152 dfdc      	RCALL _lcd_gotoxy
000153 81a8      	LD   R26,Y
000154 30aa      	CPI  R26,LOW(0xA)
000155 f409      	BRNE _0x2000013
000156 c054      	RJMP _0x2040001
                 _0x2000013:
                 _0x2000010:
000157 9453      	INC  R5
000158 9ad8      	SBI  0x1B,0
000159 81e8      	LD   R30,Y
00015a 93ea      	ST   -Y,R30
00015b dfc6      	RCALL __lcd_write_data
00015c 98d8      	CBI  0x1B,0
00015d c04d      	RJMP _0x2040001
                 _lcd_puts:
00015e 931a      	ST   -Y,R17
                 _0x2000014:
00015f 81a9      	LDD  R26,Y+1
000160 81ba      	LDD  R27,Y+1+1
000161 91ed      	LD   R30,X+
000162 83a9      	STD  Y+1,R26
000163 83ba      	STD  Y+1+1,R27
000164 2f1e      	MOV  R17,R30
000165 30e0      	CPI  R30,0
000166 f019      	BREQ _0x2000016
000167 931a      	ST   -Y,R17
000168 dfe0      	RCALL _lcd_putchar
000169 cff5      	RJMP _0x2000014
                 _0x2000016:
00016a c00e      	RJMP _0x2040002
                 _lcd_putsf:
00016b 931a      	ST   -Y,R17
                 _0x2000017:
00016c 81e9      	LDD  R30,Y+1
00016d 81fa      	LDD  R31,Y+1+1
00016e 9631      	ADIW R30,1
00016f 83e9      	STD  Y+1,R30
000170 83fa      	STD  Y+1+1,R31
000171 9731      	SBIW R30,1
000172 91e4      	LPM  R30,Z
000173 2f1e      	MOV  R17,R30
000174 30e0      	CPI  R30,0
000175 f019      	BREQ _0x2000019
000176 931a      	ST   -Y,R17
000177 dfd1      	RCALL _lcd_putchar
000178 cff3      	RJMP _0x2000017
                 _0x2000019:
                 _0x2040002:
000179 8118      	LDD  R17,Y+0
00017a 9623      	ADIW R28,3
00017b 9508      	RET
                 _lcd_init:
00017c 9ad4      	SBI  0x1A,4
00017d 9ad5      	SBI  0x1A,5
00017e 9ad6      	SBI  0x1A,6
00017f 9ad7      	SBI  0x1A,7
000180 9ad2      	SBI  0x1A,2
000181 9ad0      	SBI  0x1A,0
000182 9ad1      	SBI  0x1A,1
000183 98da      	CBI  0x1B,2
000184 98d8      	CBI  0x1B,0
000185 98d9      	CBI  0x1B,1
000186 8078      	LDD  R7,Y+0
000187 81e8      	LD   R30,Y
000188 58e0      	SUBI R30,-LOW(128)
                +
000189 93e0 0181+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00018b 81e8      	LD   R30,Y
00018c 54e0      	SUBI R30,-LOW(192)
                +
00018d 93e0 0182+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00018f 940e 01dc 	CALL SUBOPT_0x6
000191 940e 01f5 	CALL SUBOPT_0x9
000193 940e 01f5 	CALL SUBOPT_0x9
000195 940e 01f5 	CALL SUBOPT_0x9
000197 e2e0      	LDI  R30,LOW(32)
000198 93ea      	ST   -Y,R30
000199 df64      	RCALL __lcd_write_nibble_G100
                +
00019a ec88     +LDI R24 , LOW ( 200 )
00019b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00019c 9701     +SBIW R24 , 1
00019d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00019e e2e8      	LDI  R30,LOW(40)
00019f 93ea      	ST   -Y,R30
0001a0 df81      	RCALL __lcd_write_data
0001a1 e0e4      	LDI  R30,LOW(4)
0001a2 93ea      	ST   -Y,R30
0001a3 df7e      	RCALL __lcd_write_data
0001a4 e8e5      	LDI  R30,LOW(133)
0001a5 93ea      	ST   -Y,R30
0001a6 df7b      	RCALL __lcd_write_data
0001a7 e0e6      	LDI  R30,LOW(6)
0001a8 93ea      	ST   -Y,R30
0001a9 df78      	RCALL __lcd_write_data
0001aa df91      	RCALL _lcd_clear
                 _0x2040001:
0001ab 9621      	ADIW R28,1
0001ac 9508      	RET
                 
                 	.CSEG
                 _strlen:
0001ad 91a9          ld   r26,y+
0001ae 91b9          ld   r27,y+
0001af 27ee          clr  r30
0001b0 27ff          clr  r31
                 strlen0:
0001b1 916d          ld   r22,x+
0001b2 2366          tst  r22
0001b3 f011          breq strlen1
0001b4 9631          adiw r30,1
0001b5 cffb          rjmp strlen0
                 strlen1:
0001b6 9508          ret
                 
                 	.DSEG
                 __base_y_G100:
00017f           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0001b7 81eb      	LDD  R30,Y+3
0001b8 81fc      	LDD  R31,Y+3+1
0001b9 93fa      	ST   -Y,R31
0001ba 93ea      	ST   -Y,R30
0001bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
0001bc 940e 01ad 	CALL _strlen
0001be e1a0      	LDI  R26,LOW(16)
0001bf e0b0      	LDI  R27,HIGH(16)
0001c0 1bae      	SUB  R26,R30
0001c1 0bbf      	SBC  R27,R31
0001c2 01fd      	MOVW R30,R26
0001c3 95f6      	LSR  R31
0001c4 95e7      	ROR  R30
0001c5 2f1e      	MOV  R17,R30
0001c6 931a      	ST   -Y,R17
0001c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0001c8 940e 015e 	CALL _lcd_puts
0001ca ece8      	LDI  R30,LOW(200)
0001cb e0f0      	LDI  R31,HIGH(200)
0001cc 93fa      	ST   -Y,R31
0001cd 93ea      	ST   -Y,R30
0001ce 940c 01fe 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0001d0 e0e1      	LDI  R30,LOW(1)
0001d1 93ea      	ST   -Y,R30
0001d2 940c 012f 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0001d4 e0e0      	LDI  R30,LOW(0)
0001d5 93ea      	ST   -Y,R30
0001d6 93ea      	ST   -Y,R30
0001d7 940c 012f 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0001d9 e0e0      	LDI  R30,LOW(0)
0001da 93ea      	ST   -Y,R30
0001db cff4      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0001dc e1e4      	LDI  R30,LOW(20)
0001dd e0f0      	LDI  R31,HIGH(20)
0001de 93fa      	ST   -Y,R31
0001df 93ea      	ST   -Y,R30
0001e0 940c 01fe 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
0001e2 93fa      	ST   -Y,R31
0001e3 93ea      	ST   -Y,R30
0001e4 940e 016b 	CALL _lcd_putsf
0001e6 ece8      	LDI  R30,LOW(200)
0001e7 e0f0      	LDI  R31,HIGH(200)
0001e8 93fa      	ST   -Y,R31
0001e9 93ea      	ST   -Y,R30
0001ea 940c 01fe 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0001ec 93ea      	ST   -Y,R30
0001ed 940e 0122 	CALL __lcd_write_data
0001ef e0e3      	LDI  R30,LOW(3)
0001f0 e0f0      	LDI  R31,HIGH(3)
0001f1 93fa      	ST   -Y,R31
0001f2 93ea      	ST   -Y,R30
0001f3 940c 01fe 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
0001f5 e3e0      	LDI  R30,LOW(48)
0001f6 93ea      	ST   -Y,R30
0001f7 940e 00fe 	CALL __lcd_write_nibble_G100
                +
0001f9 ec88     +LDI R24 , LOW ( 200 )
0001fa e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001fb 9701     +SBIW R24 , 1
0001fc f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001fd 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0001fe 91e9      	ld   r30,y+
0001ff 91f9      	ld   r31,y+
000200 9630      	adiw r30,0
000201 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000202 ed80     +LDI R24 , LOW ( 0x7D0 )
000203 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000204 9701     +SBIW R24 , 1
000205 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000206 95a8      	wdr
000207 9731      	sbiw r30,1
000208 f7c9      	brne __delay_ms0
                 __delay_ms1:
000209 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  15 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   0 
r24:  21 r25:   5 r26:  15 r27:   7 r28:   6 r29:   1 r30: 126 r31:  44 
x  :   5 y  :  97 z  :   9 
Registers used: 18 out of 35 (51.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   8 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  10 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  31 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   4 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   0 cpi   :   5 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  28 ld    :  21 ldd   :  19 ldi   :  67 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   1 mov   :   5 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   8 pop   :   0 push  :   0 rcall :  24 ret   :  11 
reti  :   0 rjmp  :  18 rol   :   0 ror   :   1 sbc   :   1 sbci  :   1 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :   4 sts   :   2 sub   :   1 subi  :   4 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 40 out of 116 (34.5%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000414    934    110   1044   16384   6.4%
[.dseg] 0x000060 0x000183      0     35     35    1119   3.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
