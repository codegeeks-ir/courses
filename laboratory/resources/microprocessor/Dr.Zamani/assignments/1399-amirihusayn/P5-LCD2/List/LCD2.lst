
AVRASM ver. 2.1.30  D:\MicroLab\P5-LCD2\List\LCD2.asm Wed Nov 25 00:38:14 2020

D:\MicroLab\P5-LCD2\List\LCD2.asm(1059): warning: Register r4 already defined by the .DEF directive
D:\MicroLab\P5-LCD2\List\LCD2.asm(1060): warning: Register r7 already defined by the .DEF directive
D:\MicroLab\P5-LCD2\List\LCD2.asm(1061): warning: Register r6 already defined by the .DEF directive
D:\MicroLab\P5-LCD2\List\LCD2.asm(1062): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Evaluation
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8/000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _index=R4
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 0020
00002b 4e52
00002c 4d5f
00002d 4349      	.DB  0x20,0x0,0x52,0x4E,0x5F,0x4D,0x49,0x43
00002e 4f52
00002f 002b
000030 7777
000031 2e77      	.DB  0x52,0x4F,0x2B,0x0,0x77,0x77,0x77,0x2E
000032 6172
000033 6179
000034 6e6e
000035 6b69      	.DB  0x72,0x61,0x79,0x61,0x6E,0x6E,0x69,0x6B
000036 632e
000037 6d6f
000038 5500
000039 5455      	.DB  0x2E,0x63,0x6F,0x6D,0x0,0x55,0x55,0x54
00003a 7700
00003b 7777
00003c 752e
00003d 7475      	.DB  0x0,0x77,0x77,0x77,0x2E,0x75,0x75,0x74
00003e 612e
00003f 2e63
000040 7269
000041 2020      	.DB  0x2E,0x61,0x63,0x2E,0x69,0x72,0x20,0x20
000042 0020      	.DB  0x20,0x0
                 _0x2000003:
000043 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000044 000a      	.DW  0x0A
000045 0160      	.DW  _0x18
000046 0056      	.DW  _0x0*2+2
                 
000047 0011      	.DW  0x11
000048 016a      	.DW  _0x18+10
000049 0060      	.DW  _0x0*2+12
                 
00004a 0004      	.DW  0x04
00004b 017b      	.DW  _0x18+27
00004c 0071      	.DW  _0x0*2+29
                 
00004d 0011      	.DW  0x11
00004e 017f      	.DW  _0x18+31
00004f 0075      	.DW  _0x0*2+33
                 
000050 000a      	.DW  0x0A
000051 0190      	.DW  _0x18+48
000052 0056      	.DW  _0x0*2+2
                 
000053 0011      	.DW  0x11
000054 019a      	.DW  _0x18+58
000055 0060      	.DW  _0x0*2+12
                 
000056 0002      	.DW  0x02
000057 01ab      	.DW  __base_y_G100
000058 0086      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000059 0000      	.DW  0
                 
                 __RESET:
00005a 94f8      	CLI
00005b 27ee      	CLR  R30
00005c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005d e0f1      	LDI  R31,1
00005e bffb      	OUT  GICR,R31
00005f bfeb      	OUT  GICR,R30
000060 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000061 e1f8      	LDI  R31,0x18
000062 bdf1      	OUT  WDTCR,R31
000063 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000064 e08d      	LDI  R24,(14-2)+1
000065 e0a2      	LDI  R26,2
000066 27bb      	CLR  R27
                 __CLEAR_REG:
000067 93ed      	ST   X+,R30
000068 958a      	DEC  R24
000069 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006d 93ed      	ST   X+,R30
00006e 9701      	SBIW R24,1
00006f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000070 e8e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000071 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000072 9185      	LPM  R24,Z+
000073 9195      	LPM  R25,Z+
000074 9700      	SBIW R24,0
000075 f061      	BREQ __GLOBAL_INI_END
000076 91a5      	LPM  R26,Z+
000077 91b5      	LPM  R27,Z+
000078 9005      	LPM  R0,Z+
000079 9015      	LPM  R1,Z+
00007a 01bf      	MOVW R22,R30
00007b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007c 9005      	LPM  R0,Z+
00007d 920d      	ST   X+,R0
00007e 9701      	SBIW R24,1
00007f f7e1      	BRNE __GLOBAL_INI_LOOP
000080 01fb      	MOVW R30,R22
000081 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000082 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000083 bfed      	OUT  SPL,R30
000084 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000085 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000086 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000087 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000088 940c 00f3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : LCD2
                 ;Version :
                 ;Date    : 17/11/2020
                 ;Author  : Freeware, for evaluation and non-commercial use only
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8/000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <string.h>
                 ;
                 ;int index;
                 ;
                 ;void TurnRigth(const char *firstRow , const char *secondRow)
                 ; 0000 001A {
                 
                 	.CSEG
                 _TurnRigth:
                 ; 0000 001B       for(index = 0; index < 16; index++)
                 ;	*firstRow -> Y+2
                 ;	*secondRow -> Y+0
00008a 2444      	CLR  R4
00008b 2455      	CLR  R5
                 _0x4:
00008c e1e0      	LDI  R30,LOW(16)
00008d e0f0      	LDI  R31,HIGH(16)
00008e 164e      	CP   R4,R30
00008f 065f      	CPC  R5,R31
000090 f444      	BRGE _0x5
                 ; 0000 001C       {
                 ; 0000 001D             lcd_gotoxy(index,1);
000091 940e 01c8 	CALL SUBOPT_0x0
                 ; 0000 001E             lcd_putchar(secondRow[index]);
000093 940e 01cd 	CALL SUBOPT_0x1
                 ; 0000 001F             delay_ms(30);
                 ; 0000 0020       }
000095 01f2      	MOVW R30,R4
000096 9631      	ADIW R30,1
000097 012f      	MOVW R4,R30
000098 cff3      	RJMP _0x4
                 _0x5:
                 ; 0000 0021       delay_ms(50);
000099 940e 01dc 	CALL SUBOPT_0x2
                 ; 0000 0022 
                 ; 0000 0023       for(index = 0; index < 16; index++)
                 _0x7:
00009b e1e0      	LDI  R30,LOW(16)
00009c e0f0      	LDI  R31,HIGH(16)
00009d 164e      	CP   R4,R30
00009e 065f      	CPC  R5,R31
00009f f45c      	BRGE _0x8
                 ; 0000 0024       {
                 ; 0000 0025             lcd_gotoxy(index,1);
0000a0 940e 01c8 	CALL SUBOPT_0x0
                 ; 0000 0026             lcd_putchar(' ');
0000a2 e2e0      	LDI  R30,LOW(32)
0000a3 93ea      	ST   -Y,R30
0000a4 d0bd      	RCALL _lcd_putchar
                 ; 0000 0027             delay_ms(30);
0000a5 940e 01e5 	CALL SUBOPT_0x3
                 ; 0000 0028       }
0000a7 01f2      	MOVW R30,R4
0000a8 9631      	ADIW R30,1
0000a9 012f      	MOVW R4,R30
0000aa cff0      	RJMP _0x7
                 _0x8:
                 ; 0000 0029       delay_ms(50);
0000ab 940e 01dc 	CALL SUBOPT_0x2
                 ; 0000 002A 
                 ; 0000 002B       for(index = 0; index <= 16; index++)
                 _0xA:
0000ad e1e0      	LDI  R30,LOW(16)
0000ae e0f0      	LDI  R31,HIGH(16)
0000af 15e4      	CP   R30,R4
0000b0 05f5      	CPC  R31,R5
0000b1 f034      	BRLT _0xB
                 ; 0000 002C       {
                 ; 0000 002D             lcd_gotoxy(index,0);
0000b2 940e 01eb 	CALL SUBOPT_0x4
                 ; 0000 002E             lcd_puts(firstRow);
                 ; 0000 002F             delay_ms(60);
                 ; 0000 0030             lcd_clear();
                 ; 0000 0031       }
0000b4 01f2      	MOVW R30,R4
0000b5 9631      	ADIW R30,1
0000b6 012f      	MOVW R4,R30
0000b7 cff5      	RJMP _0xA
                 _0xB:
                 ; 0000 0032       delay_ms(100);
0000b8 c034      	RJMP _0x2040003
                 ; 0000 0033 }
                 ;void TurnLeft(const char *firstRow , const char *secondRow)
                 ; 0000 0035 {
                 _TurnLeft:
                 ; 0000 0036       for(index = 15; index >= 0; index--)
                 ;	*firstRow -> Y+2
                 ;	*secondRow -> Y+0
0000b9 e0ef      	LDI  R30,LOW(15)
0000ba e0f0      	LDI  R31,HIGH(15)
0000bb 012f      	MOVW R4,R30
                 _0xD:
0000bc 2400      	CLR  R0
0000bd 1440      	CP   R4,R0
0000be 0450      	CPC  R5,R0
0000bf f044      	BRLT _0xE
                 ; 0000 0037       {
                 ; 0000 0038             lcd_gotoxy(index,1);
0000c0 940e 01c8 	CALL SUBOPT_0x0
                 ; 0000 0039             lcd_putchar(secondRow[index]);
0000c2 940e 01cd 	CALL SUBOPT_0x1
                 ; 0000 003A             delay_ms(30);
                 ; 0000 003B       }
0000c4 01f2      	MOVW R30,R4
0000c5 9731      	SBIW R30,1
0000c6 012f      	MOVW R4,R30
0000c7 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 003C       delay_ms(50);
0000c8 940e 01fe 	CALL SUBOPT_0x5
                 ; 0000 003D 
                 ; 0000 003E       for(index = 15; index >= 0; index--)
0000ca e0ef      	LDI  R30,LOW(15)
0000cb e0f0      	LDI  R31,HIGH(15)
0000cc 012f      	MOVW R4,R30
                 _0x10:
0000cd 2400      	CLR  R0
0000ce 1440      	CP   R4,R0
0000cf 0450      	CPC  R5,R0
0000d0 f06c      	BRLT _0x11
                 ; 0000 003F       {
                 ; 0000 0040             lcd_gotoxy(index,1);
0000d1 940e 01c8 	CALL SUBOPT_0x0
                 ; 0000 0041             lcd_putsf(" ");
                +
0000d3 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000d5 93fa      	ST   -Y,R31
0000d6 93ea      	ST   -Y,R30
0000d7 d0ac      	RCALL _lcd_putsf
                 ; 0000 0042             delay_ms(30);
0000d8 940e 01e5 	CALL SUBOPT_0x3
                 ; 0000 0043       }
0000da 01f2      	MOVW R30,R4
0000db 9731      	SBIW R30,1
0000dc 012f      	MOVW R4,R30
0000dd cfef      	RJMP _0x10
                 _0x11:
                 ; 0000 0044       delay_ms(50);
0000de 940e 01fe 	CALL SUBOPT_0x5
                 ; 0000 0045 
                 ; 0000 0046       for(index = 16; index >= 0; index--)
0000e0 e1e0      	LDI  R30,LOW(16)
0000e1 e0f0      	LDI  R31,HIGH(16)
0000e2 012f      	MOVW R4,R30
                 _0x13:
0000e3 2400      	CLR  R0
0000e4 1440      	CP   R4,R0
0000e5 0450      	CPC  R5,R0
0000e6 f034      	BRLT _0x14
                 ; 0000 0047       {
                 ; 0000 0048             lcd_gotoxy(index,0);
0000e7 940e 01eb 	CALL SUBOPT_0x4
                 ; 0000 0049             lcd_puts(firstRow);
                 ; 0000 004A             delay_ms(60);
                 ; 0000 004B             lcd_clear();
                 ; 0000 004C       }
0000e9 01f2      	MOVW R30,R4
0000ea 9731      	SBIW R30,1
0000eb 012f      	MOVW R4,R30
0000ec cff6      	RJMP _0x13
                 _0x14:
                 ; 0000 004D       delay_ms(100);
                 _0x2040003:
0000ed e6e4      	LDI  R30,LOW(100)
0000ee e0f0      	LDI  R31,HIGH(100)
0000ef 940e 0204 	CALL SUBOPT_0x6
                 ; 0000 004E }
0000f1 9624      	ADIW R28,4
0000f2 9508      	RET
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0052 {
                 _main:
                 ; 0000 0053       // Alphanumeric LCD initialization
                 ; 0000 0054       // Connections specified in the
                 ; 0000 0055       // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0056       // RS - PORTA Bit 0
                 ; 0000 0057       // RD - PORTA Bit 1
                 ; 0000 0058       // EN - PORTA Bit 2
                 ; 0000 0059       // D4 - PORTA Bit 4
                 ; 0000 005A       // D5 - PORTA Bit 5
                 ; 0000 005B       // D6 - PORTA Bit 6
                 ; 0000 005C       // D7 - PORTA Bit 7
                 ; 0000 005D       // Characters/line: 16
                 ; 0000 005E       lcd_init(16);
0000f3 e1e0      	LDI  R30,LOW(16)
0000f4 93ea      	ST   -Y,R30
0000f5 d09f      	RCALL _lcd_init
                 ; 0000 005F       lcd_gotoxy(0,0);
0000f6 e0e0      	LDI  R30,LOW(0)
0000f7 93ea      	ST   -Y,R30
0000f8 93ea      	ST   -Y,R30
0000f9 d04e      	RCALL _lcd_gotoxy
                 ; 0000 0060 
                 ; 0000 0061       while (1)
                 _0x15:
                 ; 0000 0062       {
                 ; 0000 0063             TurnRigth("RN_MICRO+" , "www.rayannik.com");
                +
0000fa e6e0     +LDI R30 , LOW ( _0x18 + ( 0 ) )
0000fb e0f1     +LDI R31 , HIGH ( _0x18 + ( 0 ) )
                 	__POINTW1MN _0x18,0
0000fc 93fa      	ST   -Y,R31
0000fd 93ea      	ST   -Y,R30
                +
0000fe e6ea     +LDI R30 , LOW ( _0x18 + ( 10 ) )
0000ff e0f1     +LDI R31 , HIGH ( _0x18 + ( 10 ) )
                 	__POINTW1MN _0x18,10
000100 93fa      	ST   -Y,R31
000101 93ea      	ST   -Y,R30
000102 df87      	RCALL _TurnRigth
                 ; 0000 0064 
                 ; 0000 0065             // Answer of question 1
                 ; 0000 0066             TurnRigth("UUT" , "www.uut.ac.ir   ");
                +
000103 e7eb     +LDI R30 , LOW ( _0x18 + ( 27 ) )
000104 e0f1     +LDI R31 , HIGH ( _0x18 + ( 27 ) )
                 	__POINTW1MN _0x18,27
000105 93fa      	ST   -Y,R31
000106 93ea      	ST   -Y,R30
                +
000107 e7ef     +LDI R30 , LOW ( _0x18 + ( 31 ) )
000108 e0f1     +LDI R31 , HIGH ( _0x18 + ( 31 ) )
                 	__POINTW1MN _0x18,31
000109 93fa      	ST   -Y,R31
00010a 93ea      	ST   -Y,R30
00010b df7e      	RCALL _TurnRigth
                 ; 0000 0067 
                 ; 0000 0068             // Answer of question 2
                 ; 0000 0069             TurnLeft("RN_MICRO+" , "www.rayannik.com");
                +
00010c e9e0     +LDI R30 , LOW ( _0x18 + ( 48 ) )
00010d e0f1     +LDI R31 , HIGH ( _0x18 + ( 48 ) )
                 	__POINTW1MN _0x18,48
00010e 93fa      	ST   -Y,R31
00010f 93ea      	ST   -Y,R30
                +
000110 e9ea     +LDI R30 , LOW ( _0x18 + ( 58 ) )
000111 e0f1     +LDI R31 , HIGH ( _0x18 + ( 58 ) )
                 	__POINTW1MN _0x18,58
000112 93fa      	ST   -Y,R31
000113 93ea      	ST   -Y,R30
000114 dfa4      	RCALL _TurnLeft
                 ; 0000 006A       }
000115 cfe4      	RJMP _0x15
                 ; 0000 006B }
                 _0x19:
000116 cfff      	RJMP _0x19
                 
                 	.DSEG
                 _0x18:
000160           	.BYTE 0x4B
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
000117 81e8      	LD   R30,Y
000118 71e0      	ANDI R30,LOW(0x10)
000119 f011      	BREQ _0x2000004
00011a 9adc      	SBI  0x1B,4
00011b c001      	RJMP _0x2000005
                 _0x2000004:
00011c 98dc      	CBI  0x1B,4
                 _0x2000005:
00011d 81e8      	LD   R30,Y
00011e 72e0      	ANDI R30,LOW(0x20)
00011f f011      	BREQ _0x2000006
000120 9add      	SBI  0x1B,5
000121 c001      	RJMP _0x2000007
                 _0x2000006:
000122 98dd      	CBI  0x1B,5
                 _0x2000007:
000123 81e8      	LD   R30,Y
000124 74e0      	ANDI R30,LOW(0x40)
000125 f011      	BREQ _0x2000008
000126 9ade      	SBI  0x1B,6
000127 c001      	RJMP _0x2000009
                 _0x2000008:
000128 98de      	CBI  0x1B,6
                 _0x2000009:
000129 81e8      	LD   R30,Y
00012a 78e0      	ANDI R30,LOW(0x80)
00012b f011      	BREQ _0x200000A
00012c 9adf      	SBI  0x1B,7
00012d c001      	RJMP _0x200000B
                 _0x200000A:
00012e 98df      	CBI  0x1B,7
                 _0x200000B:
                +
00012f e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000130 958a     +DEC R24
000131 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000132 9ada      	SBI  0x1B,2
                +
000133 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000134 958a     +DEC R24
000135 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000136 98da      	CBI  0x1B,2
                +
000137 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000138 958a     +DEC R24
000139 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00013a c08b      	RJMP _0x2040001
                 __lcd_write_data:
00013b 81e8      	LD   R30,Y
00013c 93ea      	ST   -Y,R30
00013d dfd9      	RCALL __lcd_write_nibble_G100
00013e 81e8          ld    r30,y
00013f 95e2          swap  r30
000140 83e8          st    y,r30
000141 81e8      	LD   R30,Y
000142 93ea      	ST   -Y,R30
000143 dfd3      	RCALL __lcd_write_nibble_G100
                +
000144 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000145 958a     +DEC R24
000146 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000147 c07e      	RJMP _0x2040001
                 _lcd_gotoxy:
000148 81e8      	LD   R30,Y
000149 e0f0      	LDI  R31,0
00014a 55e5      	SUBI R30,LOW(-__base_y_G100)
00014b 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00014c 81e0      	LD   R30,Z
00014d 81a9      	LDD  R26,Y+1
00014e 0fea      	ADD  R30,R26
00014f 93ea      	ST   -Y,R30
000150 dfea      	RCALL __lcd_write_data
000151 8079      	LDD  R7,Y+1
000152 8068      	LDD  R6,Y+0
000153 9622      	ADIW R28,2
000154 9508      	RET
                 _lcd_clear:
000155 e0e2      	LDI  R30,LOW(2)
000156 940e 0208 	CALL SUBOPT_0x7
000158 e0ec      	LDI  R30,LOW(12)
000159 93ea      	ST   -Y,R30
00015a dfe0      	RCALL __lcd_write_data
00015b e0e1      	LDI  R30,LOW(1)
00015c 940e 0208 	CALL SUBOPT_0x7
00015e e0e0      	LDI  R30,LOW(0)
00015f 2e6e      	MOV  R6,R30
000160 2e7e      	MOV  R7,R30
000161 9508      	RET
                 _lcd_putchar:
000162 81a8      	LD   R26,Y
000163 30aa      	CPI  R26,LOW(0xA)
000164 f011      	BREQ _0x2000011
000165 1479      	CP   R7,R9
000166 f048      	BRLO _0x2000010
                 _0x2000011:
000167 e0e0      	LDI  R30,LOW(0)
000168 93ea      	ST   -Y,R30
000169 9463      	INC  R6
00016a 926a      	ST   -Y,R6
00016b dfdc      	RCALL _lcd_gotoxy
00016c 81a8      	LD   R26,Y
00016d 30aa      	CPI  R26,LOW(0xA)
00016e f409      	BRNE _0x2000013
00016f c056      	RJMP _0x2040001
                 _0x2000013:
                 _0x2000010:
000170 9473      	INC  R7
000171 9ad8      	SBI  0x1B,0
000172 81e8      	LD   R30,Y
000173 93ea      	ST   -Y,R30
000174 dfc6      	RCALL __lcd_write_data
000175 98d8      	CBI  0x1B,0
000176 c04f      	RJMP _0x2040001
                 _lcd_puts:
000177 931a      	ST   -Y,R17
                 _0x2000014:
000178 81a9      	LDD  R26,Y+1
000179 81ba      	LDD  R27,Y+1+1
00017a 91ed      	LD   R30,X+
00017b 83a9      	STD  Y+1,R26
00017c 83ba      	STD  Y+1+1,R27
00017d 2f1e      	MOV  R17,R30
00017e 30e0      	CPI  R30,0
00017f f019      	BREQ _0x2000016
000180 931a      	ST   -Y,R17
000181 dfe0      	RCALL _lcd_putchar
000182 cff5      	RJMP _0x2000014
                 _0x2000016:
000183 c00e      	RJMP _0x2040002
                 _lcd_putsf:
000184 931a      	ST   -Y,R17
                 _0x2000017:
000185 81e9      	LDD  R30,Y+1
000186 81fa      	LDD  R31,Y+1+1
000187 9631      	ADIW R30,1
000188 83e9      	STD  Y+1,R30
000189 83fa      	STD  Y+1+1,R31
00018a 9731      	SBIW R30,1
00018b 91e4      	LPM  R30,Z
00018c 2f1e      	MOV  R17,R30
00018d 30e0      	CPI  R30,0
00018e f019      	BREQ _0x2000019
00018f 931a      	ST   -Y,R17
000190 dfd1      	RCALL _lcd_putchar
000191 cff3      	RJMP _0x2000017
                 _0x2000019:
                 _0x2040002:
000192 8118      	LDD  R17,Y+0
000193 9623      	ADIW R28,3
000194 9508      	RET
                 _lcd_init:
000195 9ad4      	SBI  0x1A,4
000196 9ad5      	SBI  0x1A,5
000197 9ad6      	SBI  0x1A,6
000198 9ad7      	SBI  0x1A,7
000199 9ad2      	SBI  0x1A,2
00019a 9ad0      	SBI  0x1A,0
00019b 9ad1      	SBI  0x1A,1
00019c 98da      	CBI  0x1B,2
00019d 98d8      	CBI  0x1B,0
00019e 98d9      	CBI  0x1B,1
00019f 8098      	LDD  R9,Y+0
0001a0 81e8      	LD   R30,Y
0001a1 58e0      	SUBI R30,-LOW(128)
                +
0001a2 93e0 01ad+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001a4 81e8      	LD   R30,Y
0001a5 54e0      	SUBI R30,-LOW(192)
                +
0001a6 93e0 01ae+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001a8 e1e4      	LDI  R30,LOW(20)
0001a9 e0f0      	LDI  R31,HIGH(20)
0001aa 940e 0204 	CALL SUBOPT_0x6
0001ac 940e 020e 	CALL SUBOPT_0x8
0001ae 940e 020e 	CALL SUBOPT_0x8
0001b0 940e 020e 	CALL SUBOPT_0x8
0001b2 e2e0      	LDI  R30,LOW(32)
0001b3 93ea      	ST   -Y,R30
0001b4 df62      	RCALL __lcd_write_nibble_G100
                +
0001b5 ec88     +LDI R24 , LOW ( 200 )
0001b6 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001b7 9701     +SBIW R24 , 1
0001b8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001b9 e2e8      	LDI  R30,LOW(40)
0001ba 93ea      	ST   -Y,R30
0001bb df7f      	RCALL __lcd_write_data
0001bc e0e4      	LDI  R30,LOW(4)
0001bd 93ea      	ST   -Y,R30
0001be df7c      	RCALL __lcd_write_data
0001bf e8e5      	LDI  R30,LOW(133)
0001c0 93ea      	ST   -Y,R30
0001c1 df79      	RCALL __lcd_write_data
0001c2 e0e6      	LDI  R30,LOW(6)
0001c3 93ea      	ST   -Y,R30
0001c4 df76      	RCALL __lcd_write_data
0001c5 df8f      	RCALL _lcd_clear
                 _0x2040001:
0001c6 9621      	ADIW R28,1
0001c7 9508      	RET
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
0001ab           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
0001c8 924a      	ST   -Y,R4
0001c9 e0e1      	LDI  R30,LOW(1)
0001ca 93ea      	ST   -Y,R30
0001cb 940c 0148 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1:
0001cd 01f2      	MOVW R30,R4
0001ce 81a8      	LD   R26,Y
0001cf 81b9      	LDD  R27,Y+1
0001d0 0fae      	ADD  R26,R30
0001d1 1fbf      	ADC  R27,R31
0001d2 91ec      	LD   R30,X
0001d3 93ea      	ST   -Y,R30
0001d4 940e 0162 	CALL _lcd_putchar
0001d6 e1ee      	LDI  R30,LOW(30)
0001d7 e0f0      	LDI  R31,HIGH(30)
0001d8 93fa      	ST   -Y,R31
0001d9 93ea      	ST   -Y,R30
0001da 940c 0217 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0001dc e3e2      	LDI  R30,LOW(50)
0001dd e0f0      	LDI  R31,HIGH(50)
0001de 93fa      	ST   -Y,R31
0001df 93ea      	ST   -Y,R30
0001e0 940e 0217 	CALL _delay_ms
0001e2 2444      	CLR  R4
0001e3 2455      	CLR  R5
0001e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0001e5 e1ee      	LDI  R30,LOW(30)
0001e6 e0f0      	LDI  R31,HIGH(30)
0001e7 93fa      	ST   -Y,R31
0001e8 93ea      	ST   -Y,R30
0001e9 940c 0217 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
0001eb 924a      	ST   -Y,R4
0001ec e0e0      	LDI  R30,LOW(0)
0001ed 93ea      	ST   -Y,R30
0001ee 940e 0148 	CALL _lcd_gotoxy
0001f0 81ea      	LDD  R30,Y+2
0001f1 81fb      	LDD  R31,Y+2+1
0001f2 93fa      	ST   -Y,R31
0001f3 93ea      	ST   -Y,R30
0001f4 940e 0177 	CALL _lcd_puts
0001f6 e3ec      	LDI  R30,LOW(60)
0001f7 e0f0      	LDI  R31,HIGH(60)
0001f8 93fa      	ST   -Y,R31
0001f9 93ea      	ST   -Y,R30
0001fa 940e 0217 	CALL _delay_ms
0001fc 940c 0155 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0001fe e3e2      	LDI  R30,LOW(50)
0001ff e0f0      	LDI  R31,HIGH(50)
000200 93fa      	ST   -Y,R31
000201 93ea      	ST   -Y,R30
000202 940c 0217 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000204 93fa      	ST   -Y,R31
000205 93ea      	ST   -Y,R30
000206 940c 0217 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000208 93ea      	ST   -Y,R30
000209 940e 013b 	CALL __lcd_write_data
00020b e0e3      	LDI  R30,LOW(3)
00020c e0f0      	LDI  R31,HIGH(3)
00020d cff6      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8:
00020e e3e0      	LDI  R30,LOW(48)
00020f 93ea      	ST   -Y,R30
000210 940e 0117 	CALL __lcd_write_nibble_G100
                +
000212 ec88     +LDI R24 , LOW ( 200 )
000213 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000214 9701     +SBIW R24 , 1
000215 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000216 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000217 91e9      	ld   r30,y+
000218 91f9      	ld   r31,y+
000219 9630      	adiw r30,0
00021a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00021b ed80     +LDI R24 , LOW ( 0x7D0 )
00021c e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00021d 9701     +SBIW R24 , 1
00021e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00021f 95a8      	wdr
000220 9731      	sbiw r30,1
000221 f7c9      	brne __delay_ms0
                 __delay_ms1:
000222 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :  26 r5 :   8 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   5 r26:  13 r27:   6 r28:   5 r29:   1 r30: 153 r31:  50 
x  :   5 y  :  88 z  :   9 
Registers used: 20 out of 35 (57.1%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :   9 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   9 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   4 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  28 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   7 cpc   :   6 cpi   :   4 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  28 ld    :  19 ldd   :  12 ldi   :  82 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   0 mov   :   4 movw  :  19 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   8 pop   :   0 push  :   0 rcall :  21 ret   :   8 
reti  :   0 rjmp  :  22 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :   4 sts   :   2 sub   :   0 subi  :   3 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 38 out of 116 (32.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000446    998     96   1094   16384   6.7%
[.dseg] 0x000060 0x0001af      0     79     79    1119   7.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
