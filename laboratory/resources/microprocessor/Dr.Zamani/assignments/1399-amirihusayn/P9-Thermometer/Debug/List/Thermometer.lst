
AVRASM ver. 2.1.30  D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm Mon Dec 28 10:52:22 2020

D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 1/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0044 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 2054
00002b 203d
00002c 3325
00002d 312e      	.DB  0x54,0x20,0x3D,0x20,0x25,0x33,0x2E,0x31
00002e 0066
00002f 0043      	.DB  0x66,0x0,0x43,0x0
                 _0x2000003:
000030 c080      	.DB  0x80,0xC0
                 _0x2020000:
000031 4e2d
000032 4e41
D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1127): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1129): warning: .cseg .db misalignment - padding zero byte
000034 0001      	.DB  0x1
                 _0x20A0000:
000035 4e2d
000036 4e41
000037 4900
000038 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\MicroLab\P9-Thermometer\Debug\List\Thermometer.asm(1132): warning: .cseg .db misalignment - padding zero byte
000039 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003a 0002      	.DW  0x02
00003b 0160      	.DW  _0x9
00003c 005e      	.DW  _0x0*2+10
                 
00003d 0002      	.DW  0x02
00003e 0162      	.DW  __base_y_G100
00003f 0060      	.DW  _0x2000003*2
                 
000040 0001      	.DW  0x01
000041 0166      	.DW  __seed_G105
000042 0068      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000043 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000044 94f8      	CLI
000045 27ee      	CLR  R30
000046 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000047 e0f1      	LDI  R31,1
000048 bffb      	OUT  GICR,R31
000049 bfeb      	OUT  GICR,R30
00004a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004b e08d      	LDI  R24,(14-2)+1
00004c e0a2      	LDI  R26,2
00004d 27bb      	CLR  R27
                 __CLEAR_REG:
00004e 93ed      	ST   X+,R30
00004f 958a      	DEC  R24
000050 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000051 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000052 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000053 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000054 93ed      	ST   X+,R30
000055 9701      	SBIW R24,1
000056 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000057 e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000058 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000059 9185      	LPM  R24,Z+
00005a 9195      	LPM  R25,Z+
00005b 9700      	SBIW R24,0
00005c f061      	BREQ __GLOBAL_INI_END
00005d 91a5      	LPM  R26,Z+
00005e 91b5      	LPM  R27,Z+
00005f 9005      	LPM  R0,Z+
000060 9015      	LPM  R1,Z+
000061 01bf      	MOVW R22,R30
000062 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000063 9005      	LPM  R0,Z+
000064 920d      	ST   X+,R0
000065 9701      	SBIW R24,1
000066 f7e1      	BRNE __GLOBAL_INI_LOOP
000067 01fb      	MOVW R30,R22
000068 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000069 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006a bfed      	OUT  SPL,R30
00006b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006f 940c 007f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : Thermometer
                 ;Version :
                 ;Date    : 27/12/2020
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 1/000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h> // for using sprintf function
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 001B {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 001C       ADMUX=adc_input | ADC_VREF_TYPE;
000071 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000072 81e8      	LD   R30,Y
000073 6ce0      	ORI  R30,LOW(0xC0)
000074 b9e7      	OUT  0x7,R30
                 ; 0000 001D       // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 001E       delay_us(10);
                +
000075 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000076 958a     +DEC R24
000077 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 001F       // Start the AD conversion
                 ; 0000 0020       ADCSRA|=(1<<ADSC);
000078 9a36      	SBI  0x6,6
                 ; 0000 0021       // Wait for the AD conversion to complete
                 ; 0000 0022       while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000079 9b34      	SBIS 0x6,4
00007a cffe      	RJMP _0x3
                 ; 0000 0023       ADCSRA|=(1<<ADIF);
00007b 9a34      	SBI  0x6,4
                 ; 0000 0024       return ADCW;
00007c b1e4      	IN   R30,0x4
00007d b1f5      	IN   R31,0x4+1
00007e c0cf      	RJMP _0x20C0006
                 ; 0000 0025 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0028 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0029       int adcValue;
                 ; 0000 002A       float inputVoltage , temprature;
                 ; 0000 002B       char lcdBuffer[16];
                 ; 0000 002C 
                 ; 0000 002D       // Input/Output Ports initialization
                 ; 0000 002E 
                 ; 0000 002F       // Port A initialization
                 ; 0000 0030       // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0031       DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00007f 9768      	SBIW R28,24
                 ;	adcValue -> R16,R17
                 ;	inputVoltage -> Y+20
                 ;	temprature -> Y+16
                 ;	lcdBuffer -> Y+0
000080 e0e0      	LDI  R30,LOW(0)
000081 bbea      	OUT  0x1A,R30
                 ; 0000 0032       // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0033       PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0 ...
000082 bbeb      	OUT  0x1B,R30
                 ; 0000 0034 
                 ; 0000 0035       // Port B initialization
                 ; 0000 0036       // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0037       DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000083 bbe7      	OUT  0x17,R30
                 ; 0000 0038       // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0039       PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0 ...
000084 bbe8      	OUT  0x18,R30
                 ; 0000 003A 
                 ; 0000 003B       // Port C initialization
                 ; 0000 003C       // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003D       DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000085 bbe4      	OUT  0x14,R30
                 ; 0000 003E       // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003F       PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0 ...
000086 bbe5      	OUT  0x15,R30
                 ; 0000 0040 
                 ; 0000 0041       // Port D initialization
                 ; 0000 0042       // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0043       DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000087 bbe1      	OUT  0x11,R30
                 ; 0000 0044       // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0045       PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0 ...
000088 bbe2      	OUT  0x12,R30
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048 
                 ; 0000 0049       // ADC initialization
                 ; 0000 004A       // ADC Clock frequency: 500/000 kHz
                 ; 0000 004B       // ADC Voltage Reference: AREF pin
                 ; 0000 004C       // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 004D       ADMUX=ADC_VREF_TYPE;
000089 ece0      	LDI  R30,LOW(192)
00008a b9e7      	OUT  0x7,R30
                 ; 0000 004E       ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
00008b e8e1      	LDI  R30,LOW(129)
00008c b9e6      	OUT  0x6,R30
                 ; 0000 004F       SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
00008d e0e0      	LDI  R30,LOW(0)
00008e bfe0      	OUT  0x30,R30
                 ; 0000 0050 
                 ; 0000 0051 
                 ; 0000 0052       // Alphanumeric LCD initialization
                 ; 0000 0053       // Connections are specified in the
                 ; 0000 0054       // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0055       // RS - PORTD Bit 0
                 ; 0000 0056       // RD - PORTD Bit 1
                 ; 0000 0057       // EN - PORTD Bit 2
                 ; 0000 0058       // D4 - PORTD Bit 4
                 ; 0000 0059       // D5 - PORTD Bit 5
                 ; 0000 005A       // D6 - PORTD Bit 6
                 ; 0000 005B       // D7 - PORTD Bit 7
                 ; 0000 005C       // Characters/line: 16
                 ; 0000 005D       lcd_init(16);
00008f e1a0      	LDI  R26,LOW(16)
000090 d092      	RCALL _lcd_init
                 ; 0000 005E       lcd_clear();
000091 d05f      	RCALL _lcd_clear
                 ; 0000 005F 
                 ; 0000 0060       while (1)
                 _0x6:
                 ; 0000 0061       {
                 ; 0000 0062             // read_adc(0) reads analog value of Pin0 and returns an integer value between 0 and 1023 :
                 ; 0000 0063             adcValue = read_adc(0);
000092 e0a0      	LDI  R26,LOW(0)
000093 dfdd      	RCALL _read_adc
000094 018f      	MOVW R16,R30
                 ; 0000 0064             // adcValue to temprature
                 ; 0000 0065             temprature = adcValue / 4.03;
000095 940e 05b3 	CALL SUBOPT_0x0
000097 01df      	MOVW R26,R30
000098 01cb      	MOVW R24,R22
                +
000099 ece3     +LDI R30 , LOW ( 0x4080F5C3 )
00009a eff5     +LDI R31 , HIGH ( 0x4080F5C3 )
00009b e860     +LDI R22 , BYTE3 ( 0x4080F5C3 )
00009c e470     +LDI R23 , BYTE4 ( 0x4080F5C3 )
                 	__GETD1N 0x4080F5C3
00009d 940e 0807 	CALL __DIVF21
00009f 940e 05b8 	CALL SUBOPT_0x1
                 ; 0000 0066 
                 ; 0000 0067             sprintf(lcdBuffer , "T = %3.1f" , temprature);
0000a1 01fe      	MOVW R30,R28
0000a2 93fa      	ST   -Y,R31
0000a3 93ea      	ST   -Y,R30
                +
0000a4 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000a5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000a6 93fa      	ST   -Y,R31
0000a7 93ea      	ST   -Y,R30
                +
0000a8 89ec     +LDD R30 , Y + 20
0000a9 89fd     +LDD R31 , Y + 20 + 1
0000aa 896e     +LDD R22 , Y + 20 + 2
0000ab 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
0000ac 940e 08f0 	CALL __PUTPARD1
0000ae e084      	LDI  R24,4
0000af 940e 0476 	CALL _sprintf
0000b1 9628      	ADIW R28,8
                 ; 0000 0068             lcd_gotoxy(0,0);
0000b2 e0e0      	LDI  R30,LOW(0)
0000b3 93ea      	ST   -Y,R30
0000b4 e0a0      	LDI  R26,LOW(0)
0000b5 d02e      	RCALL _lcd_gotoxy
                 ; 0000 0069             lcd_puts(lcdBuffer);
0000b6 01de      	MOVW R26,R28
0000b7 d05a      	RCALL _lcd_puts
                 ; 0000 006A             lcd_gotoxy(8,0);
0000b8 e0e8      	LDI  R30,LOW(8)
0000b9 93ea      	ST   -Y,R30
0000ba e0a0      	LDI  R26,LOW(0)
0000bb d028      	RCALL _lcd_gotoxy
                 ; 0000 006B             lcd_puts("C");
                +
0000bc e6a0     +LDI R26 , LOW ( _0x9 + ( 0 ) )
0000bd e0b1     +LDI R27 , HIGH ( _0x9 + ( 0 ) )
                 	__POINTW2MN _0x9,0
0000be d053      	RCALL _lcd_puts
                 ; 0000 006C             delay_us(250);
                +
0000bf e583     +LDI R24 , LOW ( 83 )
                +__DELAY_USB_LOOP :
0000c0 958a     +DEC R24
0000c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 83
                 ; 0000 006D       }
0000c2 cfcf      	RJMP _0x6
                 ; 0000 006E }
                 _0xA:
0000c3 cfff      	RJMP _0xA
                 ; .FEND
                 
                 	.DSEG
                 _0x9:
000160           	.BYTE 0x2
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000c4 93aa      	ST   -Y,R26
0000c5 b3e2      	IN   R30,0x12
0000c6 70ef      	ANDI R30,LOW(0xF)
0000c7 2fae      	MOV  R26,R30
0000c8 81e8      	LD   R30,Y
0000c9 7fe0      	ANDI R30,LOW(0xF0)
0000ca 2bea      	OR   R30,R26
0000cb bbe2      	OUT  0x12,R30
                +
0000cc e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000cd 958a     +DEC R24
0000ce f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000cf 9a92      	SBI  0x12,2
                +
0000d0 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000d1 958a     +DEC R24
0000d2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000d3 9892      	CBI  0x12,2
                +
0000d4 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
0000d5 958a     +DEC R24
0000d6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
0000d7 c076      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000d8 93aa      	ST   -Y,R26
0000d9 81a8      	LD   R26,Y
0000da dfe9      	RCALL __lcd_write_nibble_G100
0000db 81e8          ld    r30,y
0000dc 95e2          swap  r30
0000dd 83e8          st    y,r30
0000de 81a8      	LD   R26,Y
0000df dfe4      	RCALL __lcd_write_nibble_G100
                +
0000e0 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0000e1 958a     +DEC R24
0000e2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0000e3 c06a      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000e4 93aa      	ST   -Y,R26
0000e5 81e8      	LD   R30,Y
0000e6 e0f0      	LDI  R31,0
0000e7 59ee      	SUBI R30,LOW(-__base_y_G100)
0000e8 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000e9 81e0      	LD   R30,Z
0000ea 81a9      	LDD  R26,Y+1
0000eb 0fae      	ADD  R26,R30
0000ec dfeb      	RCALL __lcd_write_data
0000ed 8059      	LDD  R5,Y+1
0000ee 8048      	LDD  R4,Y+0
0000ef 9622      	ADIW R28,2
0000f0 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000f1 e0a2      	LDI  R26,LOW(2)
0000f2 940e 05bd 	CALL SUBOPT_0x2
0000f4 e0ac      	LDI  R26,LOW(12)
0000f5 dfe2      	RCALL __lcd_write_data
0000f6 e0a1      	LDI  R26,LOW(1)
0000f7 940e 05bd 	CALL SUBOPT_0x2
0000f9 e0e0      	LDI  R30,LOW(0)
0000fa 2e4e      	MOV  R4,R30
0000fb 2e5e      	MOV  R5,R30
0000fc 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000fd 93aa      	ST   -Y,R26
0000fe 81a8      	LD   R26,Y
0000ff 30aa      	CPI  R26,LOW(0xA)
000100 f011      	BREQ _0x2000005
000101 1457      	CP   R5,R7
000102 f048      	BRLO _0x2000004
                 _0x2000005:
000103 e0e0      	LDI  R30,LOW(0)
000104 93ea      	ST   -Y,R30
000105 9443      	INC  R4
000106 2da4      	MOV  R26,R4
000107 dfdc      	RCALL _lcd_gotoxy
000108 81a8      	LD   R26,Y
000109 30aa      	CPI  R26,LOW(0xA)
00010a f409      	BRNE _0x2000007
00010b c042      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
00010c 9453      	INC  R5
00010d 9a90      	SBI  0x12,0
00010e 81a8      	LD   R26,Y
00010f dfc8      	RCALL __lcd_write_data
000110 9890      	CBI  0x12,0
000111 c03c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000112 93ba      	ST   -Y,R27
000113 93aa      	ST   -Y,R26
000114 931a      	ST   -Y,R17
                 _0x2000008:
000115 81a9      	LDD  R26,Y+1
000116 81ba      	LDD  R27,Y+1+1
000117 91ed      	LD   R30,X+
000118 83a9      	STD  Y+1,R26
000119 83ba      	STD  Y+1+1,R27
00011a 2f1e      	MOV  R17,R30
00011b 30e0      	CPI  R30,0
00011c f019      	BREQ _0x200000A
00011d 2fa1      	MOV  R26,R17
00011e dfde      	RCALL _lcd_putchar
00011f cff5      	RJMP _0x2000008
                 _0x200000A:
000120 8118      	LDD  R17,Y+0
000121 9623      	ADIW R28,3
000122 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000123 93aa      	ST   -Y,R26
000124 b3e1      	IN   R30,0x11
000125 6fe0      	ORI  R30,LOW(0xF0)
000126 bbe1      	OUT  0x11,R30
000127 9a8a      	SBI  0x11,2
000128 9a88      	SBI  0x11,0
000129 9a89      	SBI  0x11,1
00012a 9892      	CBI  0x12,2
00012b 9890      	CBI  0x12,0
00012c 9891      	CBI  0x12,1
00012d 8078      	LDD  R7,Y+0
00012e 81e8      	LD   R30,Y
00012f 58e0      	SUBI R30,-LOW(128)
                +
000130 93e0 0164+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000132 81e8      	LD   R30,Y
000133 54e0      	SUBI R30,-LOW(192)
                +
000134 93e0 0165+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000136 e1a4      	LDI  R26,LOW(20)
000137 e0b0      	LDI  R27,0
000138 940e 06b9 	CALL _delay_ms
00013a 940e 05c3 	CALL SUBOPT_0x3
00013c 940e 05c3 	CALL SUBOPT_0x3
00013e 940e 05c3 	CALL SUBOPT_0x3
000140 e2a0      	LDI  R26,LOW(32)
000141 df82      	RCALL __lcd_write_nibble_G100
                +
000142 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000143 958a     +DEC R24
000144 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
000145 e2a8      	LDI  R26,LOW(40)
000146 df91      	RCALL __lcd_write_data
000147 e0a4      	LDI  R26,LOW(4)
000148 df8f      	RCALL __lcd_write_data
000149 e8a5      	LDI  R26,LOW(133)
00014a df8d      	RCALL __lcd_write_data
00014b e0a6      	LDI  R26,LOW(6)
00014c df8b      	RCALL __lcd_write_data
00014d dfa3      	RCALL _lcd_clear
                 _0x20C0006:
00014e 9621      	ADIW R28,1
00014f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000150 93ba      	ST   -Y,R27
000151 93aa      	ST   -Y,R26
000152 931a      	ST   -Y,R17
000153 930a      	ST   -Y,R16
000154 81aa      	LDD  R26,Y+2
000155 81bb      	LDD  R27,Y+2+1
000156 9612      	ADIW R26,2
000157 940e 08d7 	CALL __GETW1P
000159 9730      	SBIW R30,0
00015a f129      	BREQ _0x2020010
00015b 81aa      	LDD  R26,Y+2
00015c 81bb      	LDD  R27,Y+2+1
00015d 9614      	ADIW R26,4
00015e 940e 08d7 	CALL __GETW1P
000160 018f      	MOVW R16,R30
000161 9730      	SBIW R30,0
000162 f061      	BREQ _0x2020012
                +
000163 3002     +CPI R16 , LOW ( 2 )
000164 e0e0     +LDI R30 , HIGH ( 2 )
000165 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000166 f080      	BRLO _0x2020013
000167 01f8      	MOVW R30,R16
000168 9731      	SBIW R30,1
000169 018f      	MOVW R16,R30
                +
00016a 81aa     +LDD R26 , Y + 2
00016b 81bb     +LDD R27 , Y + 2 + 1
00016c 9614     +ADIW R26 , 4
00016d 93ed     +ST X + , R30
00016e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00016f 81aa      	LDD  R26,Y+2
000170 81bb      	LDD  R27,Y+2+1
000171 9612      	ADIW R26,2
000172 940e 05ca 	CALL SUBOPT_0x4
000174 9731      	SBIW R30,1
000175 81ac      	LDD  R26,Y+4
000176 83a0      	STD  Z+0,R26
                 _0x2020013:
000177 81aa      	LDD  R26,Y+2
000178 81bb      	LDD  R27,Y+2+1
000179 940e 08d7 	CALL __GETW1P
00017b 23ff      	TST  R31
00017c f012      	BRMI _0x2020014
00017d 940e 05ca 	CALL SUBOPT_0x4
                 _0x2020014:
00017f c006      	RJMP _0x2020015
                 _0x2020010:
000180 81aa      	LDD  R26,Y+2
000181 81bb      	LDD  R27,Y+2+1
000182 efef      	LDI  R30,LOW(65535)
000183 efff      	LDI  R31,HIGH(65535)
000184 93ed      	ST   X+,R30
000185 93fc      	ST   X,R31
                 _0x2020015:
000186 8119      	LDD  R17,Y+1
000187 8108      	LDD  R16,Y+0
000188 9625      	ADIW R28,5
000189 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
00018a 940e 05d0 	CALL SUBOPT_0x5
00018c e8e0      	LDI  R30,LOW(128)
00018d 83ea      	STD  Y+2,R30
00018e e3ef      	LDI  R30,LOW(63)
00018f 83eb      	STD  Y+3,R30
000190 940e 090d 	CALL __SAVELOCR4
000192 85ee      	LDD  R30,Y+14
000193 85ff      	LDD  R31,Y+14+1
000194 3fef      	CPI  R30,LOW(0xFFFF)
000195 efaf      	LDI  R26,HIGH(0xFFFF)
000196 07fa      	CPC  R31,R26
000197 f449      	BRNE _0x2020019
000198 85e8      	LDD  R30,Y+8
000199 85f9      	LDD  R31,Y+8+1
00019a 93fa      	ST   -Y,R31
00019b 93ea      	ST   -Y,R30
                +
00019c e6a2     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00019d e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00019e 940e 04aa 	CALL _strcpyf
0001a0 c0b7      	RJMP _0x20C0005
                 _0x2020019:
0001a1 3fef      	CPI  R30,LOW(0x7FFF)
0001a2 e7af      	LDI  R26,HIGH(0x7FFF)
0001a3 07fa      	CPC  R31,R26
0001a4 f449      	BRNE _0x2020018
0001a5 85e8      	LDD  R30,Y+8
0001a6 85f9      	LDD  R31,Y+8+1
0001a7 93fa      	ST   -Y,R31
0001a8 93ea      	ST   -Y,R30
                +
0001a9 e6a3     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
0001aa e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
0001ab 940e 04aa 	CALL _strcpyf
0001ad c0aa      	RJMP _0x20C0005
                 _0x2020018:
0001ae 85ab      	LDD  R26,Y+11
0001af 30a7      	CPI  R26,LOW(0x7)
0001b0 f010      	BRLO _0x202001B
0001b1 e0e6      	LDI  R30,LOW(6)
0001b2 87eb      	STD  Y+11,R30
                 _0x202001B:
0001b3 851b      	LDD  R17,Y+11
                 _0x202001C:
0001b4 2fe1      	MOV  R30,R17
0001b5 5011      	SUBI R17,1
0001b6 30e0      	CPI  R30,0
0001b7 f019      	BREQ _0x202001E
0001b8 940e 05d7 	CALL SUBOPT_0x6
0001ba cff9      	RJMP _0x202001C
                 _0x202001E:
                +
0001bb 85ec     +LDD R30 , Y + 12
0001bc 85fd     +LDD R31 , Y + 12 + 1
0001bd 856e     +LDD R22 , Y + 12 + 2
0001be 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001bf 940e 0907 	CALL __CPD10
0001c1 f421      	BRNE _0x202001F
0001c2 e030      	LDI  R19,LOW(0)
0001c3 940e 05d7 	CALL SUBOPT_0x6
0001c5 c02d      	RJMP _0x2020020
                 _0x202001F:
0001c6 853b      	LDD  R19,Y+11
0001c7 940e 05e6 	CALL SUBOPT_0x7
0001c9 f009      	BREQ PC+2
0001ca f408      	BRCC PC+2
0001cb c00b      	RJMP _0x2020021
0001cc 940e 05d7 	CALL SUBOPT_0x6
                 _0x2020022:
0001ce 940e 05e6 	CALL SUBOPT_0x7
0001d0 f028      	BRLO _0x2020024
0001d1 940e 05f1 	CALL SUBOPT_0x8
0001d3 940e 05f6 	CALL SUBOPT_0x9
0001d5 cff8      	RJMP _0x2020022
                 _0x2020024:
0001d6 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
0001d7 940e 05e6 	CALL SUBOPT_0x7
0001d9 f440      	BRSH _0x2020028
0001da 940e 05f1 	CALL SUBOPT_0x8
0001dc 940e 0602 	CALL SUBOPT_0xA
0001de 940e 0609 	CALL SUBOPT_0xB
0001e0 5031      	SUBI R19,LOW(1)
0001e1 cff5      	RJMP _0x2020026
                 _0x2020028:
0001e2 940e 05d7 	CALL SUBOPT_0x6
                 _0x2020025:
                +
0001e4 85ec     +LDD R30 , Y + 12
0001e5 85fd     +LDD R31 , Y + 12 + 1
0001e6 856e     +LDD R22 , Y + 12 + 2
0001e7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001e8 940e 060e 	CALL SUBOPT_0xC
0001ea 940e 0609 	CALL SUBOPT_0xB
0001ec 940e 05e6 	CALL SUBOPT_0x7
0001ee f020      	BRLO _0x2020029
0001ef 940e 05f1 	CALL SUBOPT_0x8
0001f1 940e 05f6 	CALL SUBOPT_0x9
                 _0x2020029:
                 _0x2020020:
0001f3 e010      	LDI  R17,LOW(0)
                 _0x202002A:
0001f4 85eb      	LDD  R30,Y+11
0001f5 17e1      	CP   R30,R17
0001f6 f1a8      	BRLO _0x202002C
                +
0001f7 81ac     +LDD R26 , Y + 4
0001f8 81bd     +LDD R27 , Y + 4 + 1
0001f9 818e     +LDD R24 , Y + 4 + 2
0001fa 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0001fb 940e 0615 	CALL SUBOPT_0xD
0001fd 940e 060e 	CALL SUBOPT_0xC
0001ff 01df      	MOVW R26,R30
000200 01cb      	MOVW R24,R22
000201 940e 0501 	CALL _floor
                +
000203 83ec     +STD Y + 4 , R30
000204 83fd     +STD Y + 4 + 1 , R31
000205 836e     +STD Y + 4 + 2 , R22
000206 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000207 940e 05f1 	CALL SUBOPT_0x8
000209 940e 0807 	CALL __DIVF21
00020b 940e 06f6 	CALL __CFD1U
00020d 2f0e      	MOV  R16,R30
00020e 940e 061c 	CALL SUBOPT_0xE
000210 940e 0623 	CALL SUBOPT_0xF
000212 27ff      	CLR  R31
000213 2766      	CLR  R22
000214 2777      	CLR  R23
000215 940e 072f 	CALL __CDF1
                +
000217 81ac     +LDD R26 , Y + 4
000218 81bd     +LDD R27 , Y + 4 + 1
000219 818e     +LDD R24 , Y + 4 + 2
00021a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00021b 940e 07b9 	CALL __MULF12
00021d 940e 05f1 	CALL SUBOPT_0x8
00021f 940e 0628 	CALL SUBOPT_0x10
000221 940e 0609 	CALL SUBOPT_0xB
000223 2fe1      	MOV  R30,R17
000224 5f1f      	SUBI R17,-1
000225 30e0      	CPI  R30,0
000226 f669      	BRNE _0x202002A
000227 940e 061c 	CALL SUBOPT_0xE
000229 e2ee      	LDI  R30,LOW(46)
00022a 93ec      	ST   X,R30
00022b cfc8      	RJMP _0x202002A
                 _0x202002C:
00022c 940e 062d 	CALL SUBOPT_0x11
00022e 9731      	SBIW R30,1
00022f 85aa      	LDD  R26,Y+10
000230 83a0      	STD  Z+0,R26
000231 3030      	CPI  R19,0
000232 f42c      	BRGE _0x202002E
000233 9531      	NEG  R19
000234 85a8      	LDD  R26,Y+8
000235 85b9      	LDD  R27,Y+8+1
000236 e2ed      	LDI  R30,LOW(45)
000237 c003      	RJMP _0x2020113
                 _0x202002E:
000238 85a8      	LDD  R26,Y+8
000239 85b9      	LDD  R27,Y+8+1
00023a e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
00023b 93ec      	ST   X,R30
00023c 940e 062d 	CALL SUBOPT_0x11
00023e 940e 062d 	CALL SUBOPT_0x11
000240 9731      	SBIW R30,1
000241 01bf      	MOVW R22,R30
000242 2fa3      	MOV  R26,R19
000243 e0ea      	LDI  R30,LOW(10)
000244 940e 0891 	CALL __DIVB21
000246 5de0      	SUBI R30,-LOW(48)
000247 01db      	MOVW R26,R22
000248 93ec      	ST   X,R30
000249 940e 062d 	CALL SUBOPT_0x11
00024b 9731      	SBIW R30,1
00024c 01bf      	MOVW R22,R30
00024d 2fa3      	MOV  R26,R19
00024e e0ea      	LDI  R30,LOW(10)
00024f 940e 08bb 	CALL __MODB21
000251 5de0      	SUBI R30,-LOW(48)
000252 01db      	MOVW R26,R22
000253 93ec      	ST   X,R30
000254 85a8      	LDD  R26,Y+8
000255 85b9      	LDD  R27,Y+8+1
000256 e0e0      	LDI  R30,LOW(0)
000257 93ec      	ST   X,R30
                 _0x20C0005:
000258 940e 0914 	CALL __LOADLOCR4
00025a 9660      	ADIW R28,16
00025b 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00025c 93ba      	ST   -Y,R27
00025d 93aa      	ST   -Y,R26
00025e 97ef      	SBIW R28,63
00025f 9761      	SBIW R28,17
000260 940e 090b 	CALL __SAVELOCR6
000262 e010      	LDI  R17,0
                +
000263 01fe     +MOVW R30 , R28
000264 5ae8     +SUBI R30 , LOW ( - 88 )
000265 4fff     +SBCI R31 , HIGH ( - 88 )
000266 9001     +LD R0 , Z +
000267 81f0     +LD R31 , Z
000268 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000269 87e8      	STD  Y+8,R30
00026a 87f9      	STD  Y+8+1,R31
                +
00026b 01fe     +MOVW R30 , R28
00026c 5aea     +SUBI R30 , LOW ( - 86 )
00026d 4fff     +SBCI R31 , HIGH ( - 86 )
00026e 9001     +LD R0 , Z +
00026f 81f0     +LD R31 , Z
000270 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000271 83ee      	STD  Y+6,R30
000272 83ff      	STD  Y+6+1,R31
000273 81ae      	LDD  R26,Y+6
000274 81bf      	LDD  R27,Y+6+1
000275 e0e0      	LDI  R30,LOW(0)
000276 e0f0      	LDI  R31,HIGH(0)
000277 93ed      	ST   X+,R30
000278 93fc      	ST   X,R31
                 _0x2020030:
000279 01de      	MOVW R26,R28
00027a 5aa4      	SUBI R26,LOW(-(92))
00027b 4fbf      	SBCI R27,HIGH(-(92))
00027c 940e 05ca 	CALL SUBOPT_0x4
00027e 9731      	SBIW R30,1
00027f 91e4      	LPM  R30,Z
000280 2f2e      	MOV  R18,R30
000281 30e0      	CPI  R30,0
000282 f409      	BRNE PC+2
000283 c1e9      	RJMP _0x2020032
000284 2fe1      	MOV  R30,R17
000285 30e0      	CPI  R30,0
000286 f439      	BRNE _0x2020036
000287 3225      	CPI  R18,37
000288 f411      	BRNE _0x2020037
000289 e011      	LDI  R17,LOW(1)
00028a c002      	RJMP _0x2020038
                 _0x2020037:
00028b 940e 0633 	CALL SUBOPT_0x12
                 _0x2020038:
00028d c1de      	RJMP _0x2020035
                 _0x2020036:
00028e 30e1      	CPI  R30,LOW(0x1)
00028f f4c1      	BRNE _0x2020039
000290 3225      	CPI  R18,37
000291 f419      	BRNE _0x202003A
000292 940e 0633 	CALL SUBOPT_0x12
000294 c1d6      	RJMP _0x2020114
                 _0x202003A:
000295 e012      	LDI  R17,LOW(2)
000296 e0e0      	LDI  R30,LOW(0)
000297 8bed      	STD  Y+21,R30
000298 e000      	LDI  R16,LOW(0)
000299 322d      	CPI  R18,45
00029a f411      	BRNE _0x202003B
00029b e001      	LDI  R16,LOW(1)
00029c c1cf      	RJMP _0x2020035
                 _0x202003B:
00029d 322b      	CPI  R18,43
00029e f419      	BRNE _0x202003C
00029f e2eb      	LDI  R30,LOW(43)
0002a0 8bed      	STD  Y+21,R30
0002a1 c1ca      	RJMP _0x2020035
                 _0x202003C:
0002a2 3220      	CPI  R18,32
0002a3 f419      	BRNE _0x202003D
0002a4 e2e0      	LDI  R30,LOW(32)
0002a5 8bed      	STD  Y+21,R30
0002a6 c1c5      	RJMP _0x2020035
                 _0x202003D:
0002a7 c002      	RJMP _0x202003E
                 _0x2020039:
0002a8 30e2      	CPI  R30,LOW(0x2)
0002a9 f439      	BRNE _0x202003F
                 _0x202003E:
0002aa e050      	LDI  R21,LOW(0)
0002ab e013      	LDI  R17,LOW(3)
0002ac 3320      	CPI  R18,48
0002ad f411      	BRNE _0x2020040
0002ae 6800      	ORI  R16,LOW(128)
0002af c1bc      	RJMP _0x2020035
                 _0x2020040:
0002b0 c002      	RJMP _0x2020041
                 _0x202003F:
0002b1 30e3      	CPI  R30,LOW(0x3)
0002b2 f491      	BRNE _0x2020042
                 _0x2020041:
0002b3 3320      	CPI  R18,48
0002b4 f010      	BRLO _0x2020044
0002b5 332a      	CPI  R18,58
0002b6 f008      	BRLO _0x2020045
                 _0x2020044:
0002b7 c007      	RJMP _0x2020043
                 _0x2020045:
0002b8 e0aa      	LDI  R26,LOW(10)
0002b9 9f5a      	MUL  R21,R26
0002ba 2d50      	MOV  R21,R0
0002bb 2fe2      	MOV  R30,R18
0002bc 53e0      	SUBI R30,LOW(48)
0002bd 0f5e      	ADD  R21,R30
0002be c1ad      	RJMP _0x2020035
                 _0x2020043:
0002bf e040      	LDI  R20,LOW(0)
0002c0 322e      	CPI  R18,46
0002c1 f411      	BRNE _0x2020046
0002c2 e014      	LDI  R17,LOW(4)
0002c3 c1a8      	RJMP _0x2020035
                 _0x2020046:
0002c4 c00f      	RJMP _0x2020047
                 _0x2020042:
0002c5 30e4      	CPI  R30,LOW(0x4)
0002c6 f499      	BRNE _0x2020049
0002c7 3320      	CPI  R18,48
0002c8 f010      	BRLO _0x202004B
0002c9 332a      	CPI  R18,58
0002ca f008      	BRLO _0x202004C
                 _0x202004B:
0002cb c008      	RJMP _0x202004A
                 _0x202004C:
0002cc 6200      	ORI  R16,LOW(32)
0002cd e0aa      	LDI  R26,LOW(10)
0002ce 9f4a      	MUL  R20,R26
0002cf 2d40      	MOV  R20,R0
0002d0 2fe2      	MOV  R30,R18
0002d1 53e0      	SUBI R30,LOW(48)
0002d2 0f4e      	ADD  R20,R30
0002d3 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
0002d4 362c      	CPI  R18,108
0002d5 f419      	BRNE _0x202004D
0002d6 6002      	ORI  R16,LOW(2)
0002d7 e015      	LDI  R17,LOW(5)
0002d8 c193      	RJMP _0x2020035
                 _0x202004D:
0002d9 c003      	RJMP _0x202004E
                 _0x2020049:
0002da 30e5      	CPI  R30,LOW(0x5)
0002db f009      	BREQ PC+2
0002dc c18f      	RJMP _0x2020035
                 _0x202004E:
0002dd 2fe2      	MOV  R30,R18
0002de 36e3      	CPI  R30,LOW(0x63)
0002df f459      	BRNE _0x2020053
0002e0 940e 063a 	CALL SUBOPT_0x13
0002e2 940e 0641 	CALL SUBOPT_0x14
0002e4 940e 063a 	CALL SUBOPT_0x13
0002e6 81a4      	LDD  R26,Z+4
0002e7 93aa      	ST   -Y,R26
0002e8 940e 0648 	CALL SUBOPT_0x15
0002ea c180      	RJMP _0x2020054
                 _0x2020053:
0002eb 34e5      	CPI  R30,LOW(0x45)
0002ec f011      	BREQ _0x2020057
0002ed 36e5      	CPI  R30,LOW(0x65)
0002ee f409      	BRNE _0x2020058
                 _0x2020057:
0002ef c003      	RJMP _0x2020059
                 _0x2020058:
0002f0 36e6      	CPI  R30,LOW(0x66)
0002f1 f009      	BREQ PC+2
0002f2 c048      	RJMP _0x202005A
                 _0x2020059:
0002f3 01fe      	MOVW R30,R28
0002f4 9676      	ADIW R30,22
0002f5 87ee      	STD  Y+14,R30
0002f6 87ff      	STD  Y+14+1,R31
0002f7 940e 064e 	CALL SUBOPT_0x16
0002f9 940e 08db 	CALL __GETD1P
0002fb 940e 0655 	CALL SUBOPT_0x17
0002fd 940e 065a 	CALL SUBOPT_0x18
0002ff 85ad      	LDD  R26,Y+13
000300 23aa      	TST  R26
000301 f032      	BRMI _0x202005B
000302 89ad      	LDD  R26,Y+21
000303 32ab      	CPI  R26,LOW(0x2B)
000304 f059      	BREQ _0x202005D
000305 32a0      	CPI  R26,LOW(0x20)
000306 f081      	BREQ _0x202005F
000307 c017      	RJMP _0x2020060
                 _0x202005B:
000308 940e 065c 	CALL SUBOPT_0x19
00030a 940e 06c3 	CALL __ANEGF1
00030c 940e 0655 	CALL SUBOPT_0x17
00030e e2ed      	LDI  R30,LOW(45)
00030f 8bed      	STD  Y+21,R30
                 _0x202005D:
000310 ff07      	SBRS R16,7
000311 c005      	RJMP _0x2020061
000312 89ed      	LDD  R30,Y+21
000313 93ea      	ST   -Y,R30
000314 940e 0648 	CALL SUBOPT_0x15
000316 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000317 85ee      	LDD  R30,Y+14
000318 85ff      	LDD  R31,Y+14+1
000319 9631      	ADIW R30,1
00031a 87ee      	STD  Y+14,R30
00031b 87ff      	STD  Y+14+1,R31
00031c 9731      	SBIW R30,1
00031d 89ad      	LDD  R26,Y+21
00031e 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
00031f ff05      	SBRS R16,5
000320 e046      	LDI  R20,LOW(6)
000321 3626      	CPI  R18,102
000322 f451      	BRNE _0x2020064
000323 940e 065c 	CALL SUBOPT_0x19
000325 940e 08f0 	CALL __PUTPARD1
000327 934a      	ST   -Y,R20
000328 89ab      	LDD  R26,Y+19
000329 89bc      	LDD  R27,Y+19+1
00032a 940e 0518 	CALL _ftoa
00032c c009      	RJMP _0x2020065
                 _0x2020064:
00032d 940e 065c 	CALL SUBOPT_0x19
00032f 940e 08f0 	CALL __PUTPARD1
000331 934a      	ST   -Y,R20
000332 932a      	ST   -Y,R18
000333 89ac      	LDD  R26,Y+20
000334 89bd      	LDD  R27,Y+20+1
000335 de54      	RCALL __ftoe_G101
                 _0x2020065:
000336 01fe      	MOVW R30,R28
000337 9676      	ADIW R30,22
000338 940e 0661 	CALL SUBOPT_0x1A
00033a c01e      	RJMP _0x2020066
                 _0x202005A:
00033b 37e3      	CPI  R30,LOW(0x73)
00033c f439      	BRNE _0x2020068
00033d 940e 065a 	CALL SUBOPT_0x18
00033f 940e 0669 	CALL SUBOPT_0x1B
000341 940e 0661 	CALL SUBOPT_0x1A
000343 c00e      	RJMP _0x2020069
                 _0x2020068:
000344 37e0      	CPI  R30,LOW(0x70)
000345 f4c1      	BRNE _0x202006B
000346 940e 065a 	CALL SUBOPT_0x18
000348 940e 0669 	CALL SUBOPT_0x1B
00034a 87ee      	STD  Y+14,R30
00034b 87ff      	STD  Y+14+1,R31
00034c 85ae      	LDD  R26,Y+14
00034d 85bf      	LDD  R27,Y+14+1
00034e 940e 04c3 	CALL _strlenf
000350 2f1e      	MOV  R17,R30
000351 6008      	ORI  R16,LOW(8)
                 _0x2020069:
000352 770f      	ANDI R16,LOW(127)
000353 3040      	CPI  R20,0
000354 f011      	BREQ _0x202006D
000355 1741      	CP   R20,R17
000356 f008      	BRLO _0x202006E
                 _0x202006D:
000357 c001      	RJMP _0x202006C
                 _0x202006E:
000358 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
000359 e040      	LDI  R20,LOW(0)
00035a e0e0      	LDI  R30,LOW(0)
00035b 8bec      	STD  Y+20,R30
00035c e030      	LDI  R19,LOW(0)
00035d c06d      	RJMP _0x202006F
                 _0x202006B:
00035e 36e4      	CPI  R30,LOW(0x64)
00035f f011      	BREQ _0x2020072
000360 36e9      	CPI  R30,LOW(0x69)
000361 f411      	BRNE _0x2020073
                 _0x2020072:
000362 6004      	ORI  R16,LOW(4)
000363 c002      	RJMP _0x2020074
                 _0x2020073:
000364 37e5      	CPI  R30,LOW(0x75)
000365 f4a1      	BRNE _0x2020075
                 _0x2020074:
000366 e0ea      	LDI  R30,LOW(10)
000367 8bec      	STD  Y+20,R30
000368 ff01      	SBRS R16,1
000369 c008      	RJMP _0x2020076
                +
00036a e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00036b ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00036c e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00036d e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00036e 940e 05b8 	CALL SUBOPT_0x1
000370 e01a      	LDI  R17,LOW(10)
000371 c022      	RJMP _0x2020077
                 _0x2020076:
                +
000372 e1e0     +LDI R30 , LOW ( 0x2710 )
000373 e2f7     +LDI R31 , HIGH ( 0x2710 )
000374 e060     +LDI R22 , BYTE3 ( 0x2710 )
000375 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000376 940e 05b8 	CALL SUBOPT_0x1
000378 e015      	LDI  R17,LOW(5)
000379 c01a      	RJMP _0x2020077
                 _0x2020075:
00037a 35e8      	CPI  R30,LOW(0x58)
00037b f411      	BRNE _0x2020079
00037c 6008      	ORI  R16,LOW(8)
00037d c003      	RJMP _0x202007A
                 _0x2020079:
00037e 37e8      	CPI  R30,LOW(0x78)
00037f f009      	BREQ PC+2
000380 c0ea      	RJMP _0x20200B8
                 _0x202007A:
000381 e1e0      	LDI  R30,LOW(16)
000382 8bec      	STD  Y+20,R30
000383 ff01      	SBRS R16,1
000384 c008      	RJMP _0x202007C
                +
000385 e0e0     +LDI R30 , LOW ( 0x10000000 )
000386 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000387 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000388 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000389 940e 05b8 	CALL SUBOPT_0x1
00038b e018      	LDI  R17,LOW(8)
00038c c007      	RJMP _0x2020077
                 _0x202007C:
                +
00038d e0e0     +LDI R30 , LOW ( 0x1000 )
00038e e1f0     +LDI R31 , HIGH ( 0x1000 )
00038f e060     +LDI R22 , BYTE3 ( 0x1000 )
000390 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000391 940e 05b8 	CALL SUBOPT_0x1
000393 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000394 3040      	CPI  R20,0
000395 f011      	BREQ _0x202007D
000396 770f      	ANDI R16,LOW(127)
000397 c001      	RJMP _0x202007E
                 _0x202007D:
000398 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000399 ff01      	SBRS R16,1
00039a c008      	RJMP _0x202007F
00039b 940e 065a 	CALL SUBOPT_0x18
00039d 940e 064e 	CALL SUBOPT_0x16
00039f 9614      	ADIW R26,4
0003a0 940e 08db 	CALL __GETD1P
0003a2 c00f      	RJMP _0x2020115
                 _0x202007F:
0003a3 ff02      	SBRS R16,2
0003a4 c007      	RJMP _0x2020081
0003a5 940e 065a 	CALL SUBOPT_0x18
0003a7 940e 0669 	CALL SUBOPT_0x1B
0003a9 940e 087e 	CALL __CWD1
0003ab c006      	RJMP _0x2020115
                 _0x2020081:
0003ac 940e 065a 	CALL SUBOPT_0x18
0003ae 940e 0669 	CALL SUBOPT_0x1B
0003b0 2766      	CLR  R22
0003b1 2777      	CLR  R23
                 _0x2020115:
                +
0003b2 87ea     +STD Y + 10 , R30
0003b3 87fb     +STD Y + 10 + 1 , R31
0003b4 876c     +STD Y + 10 + 2 , R22
0003b5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0003b6 ff02      	SBRS R16,2
0003b7 c012      	RJMP _0x2020083
0003b8 85ad      	LDD  R26,Y+13
0003b9 23aa      	TST  R26
0003ba f442      	BRPL _0x2020084
0003bb 940e 065c 	CALL SUBOPT_0x19
0003bd 940e 0870 	CALL __ANEGD1
0003bf 940e 0655 	CALL SUBOPT_0x17
0003c1 e2ed      	LDI  R30,LOW(45)
0003c2 8bed      	STD  Y+21,R30
                 _0x2020084:
0003c3 89ed      	LDD  R30,Y+21
0003c4 30e0      	CPI  R30,0
0003c5 f019      	BREQ _0x2020085
0003c6 5f1f      	SUBI R17,-LOW(1)
0003c7 5f4f      	SUBI R20,-LOW(1)
0003c8 c001      	RJMP _0x2020086
                 _0x2020085:
0003c9 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
0003ca 2f34      	MOV  R19,R20
                 _0x202006F:
0003cb fd00      	SBRC R16,0
0003cc c014      	RJMP _0x2020087
                 _0x2020088:
0003cd 1715      	CP   R17,R21
0003ce f410      	BRSH _0x202008B
0003cf 1735      	CP   R19,R21
0003d0 f008      	BRLO _0x202008C
                 _0x202008B:
0003d1 c00f      	RJMP _0x202008A
                 _0x202008C:
0003d2 ff07      	SBRS R16,7
0003d3 c008      	RJMP _0x202008D
0003d4 ff02      	SBRS R16,2
0003d5 c004      	RJMP _0x202008E
0003d6 7f0b      	ANDI R16,LOW(251)
0003d7 892d      	LDD  R18,Y+21
0003d8 5011      	SUBI R17,LOW(1)
0003d9 c001      	RJMP _0x202008F
                 _0x202008E:
0003da e320      	LDI  R18,LOW(48)
                 _0x202008F:
0003db c001      	RJMP _0x2020090
                 _0x202008D:
0003dc e220      	LDI  R18,LOW(32)
                 _0x2020090:
0003dd 940e 0633 	CALL SUBOPT_0x12
0003df 5051      	SUBI R21,LOW(1)
0003e0 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
0003e1 1714      	CP   R17,R20
0003e2 f490      	BRSH _0x2020093
0003e3 6100      	ORI  R16,LOW(16)
0003e4 ff02      	SBRS R16,2
0003e5 c006      	RJMP _0x2020094
0003e6 940e 066e 	CALL SUBOPT_0x1C
0003e8 f009      	BREQ _0x2020095
0003e9 5051      	SUBI R21,LOW(1)
                 _0x2020095:
0003ea 5011      	SUBI R17,LOW(1)
0003eb 5041      	SUBI R20,LOW(1)
                 _0x2020094:
0003ec e3e0      	LDI  R30,LOW(48)
0003ed 93ea      	ST   -Y,R30
0003ee 940e 0648 	CALL SUBOPT_0x15
0003f0 3050      	CPI  R21,0
0003f1 f009      	BREQ _0x2020096
0003f2 5051      	SUBI R21,LOW(1)
                 _0x2020096:
0003f3 5041      	SUBI R20,LOW(1)
0003f4 cfec      	RJMP _0x2020091
                 _0x2020093:
0003f5 2f31      	MOV  R19,R17
0003f6 89ec      	LDD  R30,Y+20
0003f7 30e0      	CPI  R30,0
0003f8 f4b9      	BRNE _0x2020097
                 _0x2020098:
0003f9 3030      	CPI  R19,0
0003fa f0a1      	BREQ _0x202009A
0003fb ff03      	SBRS R16,3
0003fc c006      	RJMP _0x202009B
0003fd 85ee      	LDD  R30,Y+14
0003fe 85ff      	LDD  R31,Y+14+1
0003ff 9125      	LPM  R18,Z+
000400 87ee      	STD  Y+14,R30
000401 87ff      	STD  Y+14+1,R31
000402 c005      	RJMP _0x202009C
                 _0x202009B:
000403 85ae      	LDD  R26,Y+14
000404 85bf      	LDD  R27,Y+14+1
000405 912d      	LD   R18,X+
000406 87ae      	STD  Y+14,R26
000407 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000408 940e 0633 	CALL SUBOPT_0x12
00040a 3050      	CPI  R21,0
00040b f009      	BREQ _0x202009D
00040c 5051      	SUBI R21,LOW(1)
                 _0x202009D:
00040d 5031      	SUBI R19,LOW(1)
00040e cfea      	RJMP _0x2020098
                 _0x202009A:
00040f c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
000410 940e 0680 	CALL SUBOPT_0x1D
000412 940e 0896 	CALL __DIVD21U
000414 2f2e      	MOV  R18,R30
000415 302a      	CPI  R18,10
000416 f030      	BRLO _0x20200A2
000417 ff03      	SBRS R16,3
000418 c002      	RJMP _0x20200A3
000419 5c29      	SUBI R18,-LOW(55)
00041a c001      	RJMP _0x20200A4
                 _0x20200A3:
00041b 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
00041c c001      	RJMP _0x20200A5
                 _0x20200A2:
00041d 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
00041e fd04      	SBRC R16,4
00041f c021      	RJMP _0x20200A7
000420 3321      	CPI  R18,49
000421 f460      	BRSH _0x20200A9
                +
000422 89a8     +LDD R26 , Y + 16
000423 89b9     +LDD R27 , Y + 16 + 1
000424 898a     +LDD R24 , Y + 16 + 2
000425 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000426 30a1     +CPI R26 , LOW ( 0x1 )
000427 e0e0     +LDI R30 , HIGH ( 0x1 )
000428 07be     +CPC R27 , R30
000429 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00042a 078e     +CPC R24 , R30
00042b e0e0     +LDI R30 , BYTE4 ( 0x1 )
00042c 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00042d f409      	BRNE _0x20200A8
                 _0x20200A9:
00042e c00b      	RJMP _0x20200AB
                 _0x20200A8:
00042f 1743      	CP   R20,R19
000430 f440      	BRSH _0x2020116
000431 1753      	CP   R21,R19
000432 f010      	BRLO _0x20200AE
000433 ff00      	SBRS R16,0
000434 c001      	RJMP _0x20200AF
                 _0x20200AE:
000435 c010      	RJMP _0x20200AD
                 _0x20200AF:
000436 e220      	LDI  R18,LOW(32)
000437 ff07      	SBRS R16,7
000438 c008      	RJMP _0x20200B0
                 _0x2020116:
000439 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
00043a 6100      	ORI  R16,LOW(16)
00043b ff02      	SBRS R16,2
00043c c004      	RJMP _0x20200B1
00043d 940e 066e 	CALL SUBOPT_0x1C
00043f f009      	BREQ _0x20200B2
000440 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
000441 940e 0633 	CALL SUBOPT_0x12
000443 3050      	CPI  R21,0
000444 f009      	BREQ _0x20200B3
000445 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
000446 5031      	SUBI R19,LOW(1)
000447 940e 0680 	CALL SUBOPT_0x1D
000449 940e 08c7 	CALL __MODD21U
00044b 940e 0655 	CALL SUBOPT_0x17
00044d 89ec      	LDD  R30,Y+20
                +
00044e 89a8     +LDD R26 , Y + 16
00044f 89b9     +LDD R27 , Y + 16 + 1
000450 898a     +LDD R24 , Y + 16 + 2
000451 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000452 27ff      	CLR  R31
000453 2766      	CLR  R22
000454 2777      	CLR  R23
000455 940e 0896 	CALL __DIVD21U
000457 940e 05b8 	CALL SUBOPT_0x1
                +
000459 89e8     +LDD R30 , Y + 16
00045a 89f9     +LDD R31 , Y + 16 + 1
00045b 896a     +LDD R22 , Y + 16 + 2
00045c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00045d 940e 0907 	CALL __CPD10
00045f f009      	BREQ _0x20200A1
000460 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
000461 ff00      	SBRS R16,0
000462 c008      	RJMP _0x20200B4
                 _0x20200B5:
000463 3050      	CPI  R21,0
000464 f031      	BREQ _0x20200B7
000465 5051      	SUBI R21,LOW(1)
000466 e2e0      	LDI  R30,LOW(32)
000467 93ea      	ST   -Y,R30
000468 940e 0648 	CALL SUBOPT_0x15
00046a cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
00046b e010      	LDI  R17,LOW(0)
                 _0x2020035:
00046c ce0c      	RJMP _0x2020030
                 _0x2020032:
00046d 81ae      	LDD  R26,Y+6
00046e 81bf      	LDD  R27,Y+6+1
00046f 940e 08d7 	CALL __GETW1P
000471 940e 0912 	CALL __LOADLOCR6
000473 96ef      	ADIW R28,63
000474 966f      	ADIW R28,31
000475 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000476 92ff      	PUSH R15
000477 2ef8      	MOV  R15,R24
000478 9726      	SBIW R28,6
000479 940e 090d 	CALL __SAVELOCR4
00047b 940e 0689 	CALL SUBOPT_0x1E
00047d 9730      	SBIW R30,0
00047e f419      	BRNE _0x20200B9
00047f efef      	LDI  R30,LOW(65535)
000480 efff      	LDI  R31,HIGH(65535)
000481 c023      	RJMP _0x20C0004
                 _0x20200B9:
000482 01de      	MOVW R26,R28
000483 9616      	ADIW R26,6
000484 940e 086c 	CALL __ADDW2R15
000486 018d      	MOVW R16,R26
000487 940e 0689 	CALL SUBOPT_0x1E
000489 83ee      	STD  Y+6,R30
00048a 83ff      	STD  Y+6+1,R31
00048b e0e0      	LDI  R30,LOW(0)
00048c 87e8      	STD  Y+8,R30
00048d 87e9      	STD  Y+8+1,R30
00048e 01de      	MOVW R26,R28
00048f 961a      	ADIW R26,10
000490 940e 086c 	CALL __ADDW2R15
000492 940e 08d7 	CALL __GETW1P
000494 93fa      	ST   -Y,R31
000495 93ea      	ST   -Y,R30
000496 931a      	ST   -Y,R17
000497 930a      	ST   -Y,R16
000498 e5e0      	LDI  R30,LOW(_put_buff_G101)
000499 e0f1      	LDI  R31,HIGH(_put_buff_G101)
00049a 93fa      	ST   -Y,R31
00049b 93ea      	ST   -Y,R30
00049c 01de      	MOVW R26,R28
00049d 961a      	ADIW R26,10
00049e ddbd      	RCALL __print_G101
00049f 019f      	MOVW R18,R30
0004a0 81ae      	LDD  R26,Y+6
0004a1 81bf      	LDD  R27,Y+6+1
0004a2 e0e0      	LDI  R30,LOW(0)
0004a3 93ec      	ST   X,R30
0004a4 01f9      	MOVW R30,R18
                 _0x20C0004:
0004a5 940e 0914 	CALL __LOADLOCR4
0004a7 962a      	ADIW R28,10
0004a8 90ff      	POP  R15
0004a9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004aa 93ba      	ST   -Y,R27
0004ab 93aa      	ST   -Y,R26
0004ac 91e9          ld   r30,y+
0004ad 91f9          ld   r31,y+
0004ae 91a9          ld   r26,y+
0004af 91b9          ld   r27,y+
0004b0 01cd          movw r24,r26
                 strcpyf0:
0004b1 9005      	lpm  r0,z+
0004b2 920d          st   x+,r0
0004b3 2000          tst  r0
0004b4 f7e1          brne strcpyf0
0004b5 01fc          movw r30,r24
0004b6 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004b7 93ba      	ST   -Y,R27
0004b8 93aa      	ST   -Y,R26
0004b9 91a9          ld   r26,y+
0004ba 91b9          ld   r27,y+
0004bb 27ee          clr  r30
0004bc 27ff          clr  r31
                 strlen0:
0004bd 916d          ld   r22,x+
0004be 2366          tst  r22
0004bf f011          breq strlen1
0004c0 9631          adiw r30,1
0004c1 cffb          rjmp strlen0
                 strlen1:
0004c2 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004c3 93ba      	ST   -Y,R27
0004c4 93aa      	ST   -Y,R26
0004c5 27aa          clr  r26
0004c6 27bb          clr  r27
0004c7 91e9          ld   r30,y+
0004c8 91f9          ld   r31,y+
                 strlenf0:
0004c9 9005      	lpm  r0,z+
0004ca 2000          tst  r0
0004cb f011          breq strlenf1
0004cc 9611          adiw r26,1
0004cd cffb          rjmp strlenf0
                 strlenf1:
0004ce 01fd          movw r30,r26
0004cf 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0004d0 940e 08f5 	CALL __PUTPARD2
0004d2 817b         ldd  r23,y+3
0004d3 816a         ldd  r22,y+2
0004d4 81f9         ldd  r31,y+1
0004d5 81e8         ld   r30,y
0004d6 fb77         bst  r23,7
0004d7 0f77         lsl  r23
0004d8 fd67         sbrc r22,7
0004d9 6071         sbr  r23,1
0004da 2f97         mov  r25,r23
0004db 579e         subi r25,0x7e
0004dc f081         breq __ftrunc0
0004dd f078         brcs __ftrunc0
0004de 3198         cpi  r25,24
0004df f490         brsh __ftrunc1
0004e0 27aa         clr  r26
0004e1 27bb         clr  r27
0004e2 2788         clr  r24
                 __ftrunc2:
0004e3 9408         sec
0004e4 9587         ror  r24
0004e5 95b7         ror  r27
0004e6 95a7         ror  r26
0004e7 959a         dec  r25
0004e8 f7d1         brne __ftrunc2
0004e9 23ea         and  r30,r26
0004ea 23fb         and  r31,r27
0004eb 2368         and  r22,r24
0004ec c005         rjmp __ftrunc1
                 __ftrunc0:
0004ed 94e8         clt
0004ee 2777         clr  r23
0004ef 27ee         clr  r30
0004f0 27ff         clr  r31
0004f1 2766         clr  r22
                 __ftrunc1:
0004f2 776f         cbr  r22,0x80
0004f3 9576         lsr  r23
0004f4 f408         brcc __ftrunc3
0004f5 6860         sbr  r22,0x80
                 __ftrunc3:
0004f6 f977         bld  r23,7
0004f7 91a9         ld   r26,y+
0004f8 91b9         ld   r27,y+
0004f9 9189         ld   r24,y+
0004fa 9199         ld   r25,y+
0004fb 17ea         cp   r30,r26
0004fc 07fb         cpc  r31,r27
0004fd 0768         cpc  r22,r24
0004fe 0779         cpc  r23,r25
0004ff fb97         bst  r25,7
000500 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000501 940e 08f5 	CALL __PUTPARD2
000503 940e 08e6 	CALL __GETD2S0
000505 940e 04d0 	CALL _ftrunc
000507 940e 08eb 	CALL __PUTD1S0
000509 f419          brne __floor1
                 __floor0:
00050a 940e 08e1 	CALL __GETD1S0
00050c c009      	RJMP _0x20C0003
                 __floor1:
00050d f7e6          brtc __floor0
00050e 940e 08e1 	CALL __GETD1S0
                +
000510 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000511 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000512 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000513 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000514 940e 0762 	CALL __SUBF12
                 _0x20C0003:
000516 9624      	ADIW R28,4
000517 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000518 d0b7      	RCALL SUBOPT_0x5
000519 e0e0      	LDI  R30,LOW(0)
00051a 83ea      	STD  Y+2,R30
00051b e3ef      	LDI  R30,LOW(63)
00051c 83eb      	STD  Y+3,R30
00051d 931a      	ST   -Y,R17
00051e 930a      	ST   -Y,R16
00051f 85eb      	LDD  R30,Y+11
000520 85fc      	LDD  R31,Y+11+1
000521 3fef      	CPI  R30,LOW(0xFFFF)
000522 efaf      	LDI  R26,HIGH(0xFFFF)
000523 07fa      	CPC  R31,R26
000524 f431      	BRNE _0x20A000D
000525 d16a      	RCALL SUBOPT_0x1F
                +
000526 e6aa     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000527 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000528 940e 04aa 	CALL _strcpyf
00052a c084      	RJMP _0x20C0002
                 _0x20A000D:
00052b 3fef      	CPI  R30,LOW(0x7FFF)
00052c e7af      	LDI  R26,HIGH(0x7FFF)
00052d 07fa      	CPC  R31,R26
00052e f431      	BRNE _0x20A000C
00052f d160      	RCALL SUBOPT_0x1F
                +
000530 e6ab     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000531 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000532 940e 04aa 	CALL _strcpyf
000534 c07a      	RJMP _0x20C0002
                 _0x20A000C:
000535 85ac      	LDD  R26,Y+12
000536 23aa      	TST  R26
000537 f452      	BRPL _0x20A000F
                +
000538 85e9     +LDD R30 , Y + 9
000539 85fa     +LDD R31 , Y + 9 + 1
00053a 856b     +LDD R22 , Y + 9 + 2
00053b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00053c 940e 06c3 	CALL __ANEGF1
00053e d156      	RCALL SUBOPT_0x20
00053f d15a      	RCALL SUBOPT_0x21
000540 e2ed      	LDI  R30,LOW(45)
000541 93ec      	ST   X,R30
                 _0x20A000F:
000542 85a8      	LDD  R26,Y+8
000543 30a7      	CPI  R26,LOW(0x7)
000544 f010      	BRLO _0x20A0010
000545 e0e6      	LDI  R30,LOW(6)
000546 87e8      	STD  Y+8,R30
                 _0x20A0010:
000547 8518      	LDD  R17,Y+8
                 _0x20A0011:
000548 2fe1      	MOV  R30,R17
000549 5011      	SUBI R17,1
00054a 30e0      	CPI  R30,0
00054b f021      	BREQ _0x20A0013
00054c d154      	RCALL SUBOPT_0x22
00054d d0c7      	RCALL SUBOPT_0xD
00054e d157      	RCALL SUBOPT_0x23
00054f cff8      	RJMP _0x20A0011
                 _0x20A0013:
000550 d15a      	RCALL SUBOPT_0x24
000551 940e 0769 	CALL __ADDF12
000553 d141      	RCALL SUBOPT_0x20
000554 e010      	LDI  R17,LOW(0)
                +
000555 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000556 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000557 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000558 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000559 d14c      	RCALL SUBOPT_0x23
                 _0x20A0014:
00055a d150      	RCALL SUBOPT_0x24
00055b 940e 084c 	CALL __CMPF12
00055d f068      	BRLO _0x20A0016
00055e d142      	RCALL SUBOPT_0x22
00055f d0a2      	RCALL SUBOPT_0xA
000560 d145      	RCALL SUBOPT_0x23
000561 5f1f      	SUBI R17,-LOW(1)
000562 3217      	CPI  R17,39
000563 f030      	BRLO _0x20A0017
000564 d12b      	RCALL SUBOPT_0x1F
                +
000565 e6af     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000566 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000567 940e 04aa 	CALL _strcpyf
000569 c045      	RJMP _0x20C0002
                 _0x20A0017:
00056a cfef      	RJMP _0x20A0014
                 _0x20A0016:
00056b 3010      	CPI  R17,0
00056c f421      	BRNE _0x20A0018
00056d d12c      	RCALL SUBOPT_0x21
00056e e3e0      	LDI  R30,LOW(48)
00056f 93ec      	ST   X,R30
000570 c01d      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000571 2fe1      	MOV  R30,R17
000572 5011      	SUBI R17,1
000573 30e0      	CPI  R30,0
000574 f0c9      	BREQ _0x20A001C
000575 d12b      	RCALL SUBOPT_0x22
000576 d09e      	RCALL SUBOPT_0xD
000577 d096      	RCALL SUBOPT_0xC
000578 01df      	MOVW R26,R30
000579 01cb      	MOVW R24,R22
00057a 940e 0501 	CALL _floor
00057c d129      	RCALL SUBOPT_0x23
00057d d12d      	RCALL SUBOPT_0x24
00057e 940e 0807 	CALL __DIVF21
000580 940e 06f6 	CALL __CFD1U
000582 2f0e      	MOV  R16,R30
000583 d116      	RCALL SUBOPT_0x21
000584 d09e      	RCALL SUBOPT_0xF
000585 e0f0      	LDI  R31,0
000586 d11a      	RCALL SUBOPT_0x22
000587 d02b      	RCALL SUBOPT_0x0
000588 940e 07b9 	CALL __MULF12
00058a d129      	RCALL SUBOPT_0x25
00058b d09c      	RCALL SUBOPT_0x10
00058c d108      	RCALL SUBOPT_0x20
00058d cfe3      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
00058e 85e8      	LDD  R30,Y+8
00058f 30e0      	CPI  R30,0
000590 f0d1      	BREQ _0x20C0001
000591 d108      	RCALL SUBOPT_0x21
000592 e2ee      	LDI  R30,LOW(46)
000593 93ec      	ST   X,R30
                 _0x20A001E:
000594 85e8      	LDD  R30,Y+8
000595 50e1      	SUBI R30,LOW(1)
000596 87e8      	STD  Y+8,R30
000597 5fef      	SUBI R30,-LOW(1)
000598 f091      	BREQ _0x20A0020
000599 d11a      	RCALL SUBOPT_0x25
00059a d067      	RCALL SUBOPT_0xA
00059b d0f9      	RCALL SUBOPT_0x20
                +
00059c 85e9     +LDD R30 , Y + 9
00059d 85fa     +LDD R31 , Y + 9 + 1
00059e 856b     +LDD R22 , Y + 9 + 2
00059f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005a0 940e 06f6 	CALL __CFD1U
0005a2 2f0e      	MOV  R16,R30
0005a3 d0f6      	RCALL SUBOPT_0x21
0005a4 d07e      	RCALL SUBOPT_0xF
0005a5 e0f0      	LDI  R31,0
0005a6 d10d      	RCALL SUBOPT_0x25
0005a7 d00b      	RCALL SUBOPT_0x0
0005a8 d07f      	RCALL SUBOPT_0x10
0005a9 d0eb      	RCALL SUBOPT_0x20
0005aa cfe9      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005ab 81ae      	LDD  R26,Y+6
0005ac 81bf      	LDD  R27,Y+6+1
0005ad e0e0      	LDI  R30,LOW(0)
0005ae 93ec      	ST   X,R30
                 _0x20C0002:
0005af 8119      	LDD  R17,Y+1
0005b0 8108      	LDD  R16,Y+0
0005b1 962d      	ADIW R28,13
0005b2 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000162           	.BYTE 0x4
                 __seed_G105:
000166           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0005b3 940e 087e 	CALL __CWD1
0005b5 940e 072f 	CALL __CDF1
0005b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
                +
0005b8 8be8     +STD Y + 16 , R30
0005b9 8bf9     +STD Y + 16 + 1 , R31
0005ba 8b6a     +STD Y + 16 + 2 , R22
0005bb 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0005bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0005bd 940e 00d8 	CALL __lcd_write_data
0005bf e0a3      	LDI  R26,LOW(3)
0005c0 e0b0      	LDI  R27,0
0005c1 940c 06b9 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
0005c3 e3a0      	LDI  R26,LOW(48)
0005c4 940e 00c4 	CALL __lcd_write_nibble_G100
                +
0005c6 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0005c7 958a     +DEC R24
0005c8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0005c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0005ca 91ed      	LD   R30,X+
0005cb 91fd      	LD   R31,X+
0005cc 9631      	ADIW R30,1
0005cd 93fe      	ST   -X,R31
0005ce 93ee      	ST   -X,R30
0005cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0005d0 93ba      	ST   -Y,R27
0005d1 93aa      	ST   -Y,R26
0005d2 9724      	SBIW R28,4
0005d3 e0e0      	LDI  R30,LOW(0)
0005d4 83e8      	ST   Y,R30
0005d5 83e9      	STD  Y+1,R30
0005d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x6:
                +
0005d7 81ac     +LDD R26 , Y + 4
0005d8 81bd     +LDD R27 , Y + 4 + 1
0005d9 818e     +LDD R24 , Y + 4 + 2
0005da 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0005db e0e0     +LDI R30 , LOW ( 0x41200000 )
0005dc e0f0     +LDI R31 , HIGH ( 0x41200000 )
0005dd e260     +LDI R22 , BYTE3 ( 0x41200000 )
0005de e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0005df 940e 07b9 	CALL __MULF12
                +
0005e1 83ec     +STD Y + 4 , R30
0005e2 83fd     +STD Y + 4 + 1 , R31
0005e3 836e     +STD Y + 4 + 2 , R22
0005e4 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0005e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
                +
0005e6 81ec     +LDD R30 , Y + 4
0005e7 81fd     +LDD R31 , Y + 4 + 1
0005e8 816e     +LDD R22 , Y + 4 + 2
0005e9 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0005ea 85ac     +LDD R26 , Y + 12
0005eb 85bd     +LDD R27 , Y + 12 + 1
0005ec 858e     +LDD R24 , Y + 12 + 2
0005ed 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005ee 940e 084c 	CALL __CMPF12
0005f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
                +
0005f1 85ac     +LDD R26 , Y + 12
0005f2 85bd     +LDD R27 , Y + 12 + 1
0005f3 858e     +LDD R24 , Y + 12 + 2
0005f4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0005f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
                +
0005f6 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0005f7 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0005f8 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0005f9 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0005fa 940e 07b9 	CALL __MULF12
                +
0005fc 87ec     +STD Y + 12 , R30
0005fd 87fd     +STD Y + 12 + 1 , R31
0005fe 876e     +STD Y + 12 + 2 , R22
0005ff 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000600 5f3f      	SUBI R19,-LOW(1)
000601 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
000602 e0e0     +LDI R30 , LOW ( 0x41200000 )
000603 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000604 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000605 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000606 940e 07b9 	CALL __MULF12
000608 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000609 87ec     +STD Y + 12 , R30
00060a 87fd     +STD Y + 12 + 1 , R31
00060b 876e     +STD Y + 12 + 2 , R22
00060c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00060d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
00060e e0a0     +LDI R26 , LOW ( 0x3F000000 )
00060f e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000610 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000611 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000612 940e 0769 	CALL __ADDF12
000614 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
000615 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000616 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000617 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000618 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000619 940e 07b9 	CALL __MULF12
00061b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00061c 85a8      	LDD  R26,Y+8
00061d 85b9      	LDD  R27,Y+8+1
00061e 9611      	ADIW R26,1
00061f 87a8      	STD  Y+8,R26
000620 87b9      	STD  Y+8+1,R27
000621 9711      	SBIW R26,1
000622 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000623 2fe0      	MOV  R30,R16
000624 5de0      	SUBI R30,-LOW(48)
000625 93ec      	ST   X,R30
000626 2fe0      	MOV  R30,R16
000627 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000628 940e 08fa 	CALL __SWAPD12
00062a 940e 0762 	CALL __SUBF12
00062c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
00062d 85e8      	LDD  R30,Y+8
00062e 85f9      	LDD  R31,Y+8+1
00062f 9631      	ADIW R30,1
000630 87e8      	STD  Y+8,R30
000631 87f9      	STD  Y+8+1,R31
000632 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000633 932a      	ST   -Y,R18
000634 81af      	LDD  R26,Y+7
000635 85b8      	LDD  R27,Y+7+1
000636 85e9      	LDD  R30,Y+9
000637 85fa      	LDD  R31,Y+9+1
000638 9509      	ICALL
000639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x13:
                +
00063a 01fe     +MOVW R30 , R28
00063b 5ae6     +SUBI R30 , LOW ( - 90 )
00063c 4fff     +SBCI R31 , HIGH ( - 90 )
00063d 9001     +LD R0 , Z +
00063e 81f0     +LD R31 , Z
00063f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x14:
000641 9734      	SBIW R30,4
                +
000642 01de     +MOVW R26 , R28
000643 5aa6     +SUBI R26 , LOW ( - 90 )
000644 4fbf     +SBCI R27 , HIGH ( - 90 )
000645 93ed     +ST X + , R30
000646 93fc     +ST X , R31
                 	__PUTW1SX 90
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000648 81af      	LDD  R26,Y+7
000649 85b8      	LDD  R27,Y+7+1
00064a 85e9      	LDD  R30,Y+9
00064b 85fa      	LDD  R31,Y+9+1
00064c 9509      	ICALL
00064d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x16:
                +
00064e 01de     +MOVW R26 , R28
00064f 5aa6     +SUBI R26 , LOW ( - 90 )
000650 4fbf     +SBCI R27 , HIGH ( - 90 )
000651 900d     +LD R0 , X +
000652 91bc     +LD R27 , X
000653 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000654 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
000655 87ea     +STD Y + 10 , R30
000656 87fb     +STD Y + 10 + 1 , R31
000657 876c     +STD Y + 10 + 2 , R22
000658 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000659 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
00065a dfdf      	RCALL SUBOPT_0x13
00065b cfe5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
00065c 85ea     +LDD R30 , Y + 10
00065d 85fb     +LDD R31 , Y + 10 + 1
00065e 856c     +LDD R22 , Y + 10 + 2
00065f 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000660 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
000661 87ee      	STD  Y+14,R30
000662 87ff      	STD  Y+14+1,R31
000663 85ae      	LDD  R26,Y+14
000664 85bf      	LDD  R27,Y+14+1
000665 940e 04b7 	CALL _strlen
000667 2f1e      	MOV  R17,R30
000668 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000669 dfe4      	RCALL SUBOPT_0x16
00066a 9614      	ADIW R26,4
00066b 940e 08d7 	CALL __GETW1P
00066d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C:
00066e 7f0b      	ANDI R16,LOW(251)
00066f 89ed      	LDD  R30,Y+21
000670 93ea      	ST   -Y,R30
                +
000671 01de     +MOVW R26 , R28
000672 5aa9     +SUBI R26 , LOW ( - 87 )
000673 4fbf     +SBCI R27 , HIGH ( - 87 )
000674 900d     +LD R0 , X +
000675 91bc     +LD R27 , X
000676 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000677 01fe     +MOVW R30 , R28
000678 5ae7     +SUBI R30 , LOW ( - 89 )
000679 4fff     +SBCI R31 , HIGH ( - 89 )
00067a 9001     +LD R0 , Z +
00067b 81f0     +LD R31 , Z
00067c 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00067d 9509      	ICALL
00067e 3050      	CPI  R21,0
00067f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000680 89e8     +LDD R30 , Y + 16
000681 89f9     +LDD R31 , Y + 16 + 1
000682 896a     +LDD R22 , Y + 16 + 2
000683 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000684 85aa     +LDD R26 , Y + 10
000685 85bb     +LDD R27 , Y + 10 + 1
000686 858c     +LDD R24 , Y + 10 + 2
000687 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000688 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000689 01de      	MOVW R26,R28
00068a 961c      	ADIW R26,12
00068b 940e 086c 	CALL __ADDW2R15
00068d 940e 08d7 	CALL __GETW1P
00068f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000690 81ee      	LDD  R30,Y+6
000691 81ff      	LDD  R31,Y+6+1
000692 93fa      	ST   -Y,R31
000693 93ea      	ST   -Y,R30
000694 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
000695 87e9     +STD Y + 9 , R30
000696 87fa     +STD Y + 9 + 1 , R31
000697 876b     +STD Y + 9 + 2 , R22
000698 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
00069a 81ae      	LDD  R26,Y+6
00069b 81bf      	LDD  R27,Y+6+1
00069c 9611      	ADIW R26,1
00069d 83ae      	STD  Y+6,R26
00069e 83bf      	STD  Y+6+1,R27
00069f 9711      	SBIW R26,1
0006a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0006a1 81aa     +LDD R26 , Y + 2
0006a2 81bb     +LDD R27 , Y + 2 + 1
0006a3 818c     +LDD R24 , Y + 2 + 2
0006a4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0006a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
0006a6 83ea     +STD Y + 2 , R30
0006a7 83fb     +STD Y + 2 + 1 , R31
0006a8 836c     +STD Y + 2 + 2 , R22
0006a9 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
                +
0006ab 81ea     +LDD R30 , Y + 2
0006ac 81fb     +LDD R31 , Y + 2 + 1
0006ad 816c     +LDD R22 , Y + 2 + 2
0006ae 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0006af 85a9     +LDD R26 , Y + 9
0006b0 85ba     +LDD R27 , Y + 9 + 1
0006b1 858b     +LDD R24 , Y + 9 + 2
0006b2 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
0006b4 85a9     +LDD R26 , Y + 9
0006b5 85ba     +LDD R27 , Y + 9 + 1
0006b6 858b     +LDD R24 , Y + 9 + 2
0006b7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006b8 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0006b9 9610      	adiw r26,0
0006ba f039      	breq __delay_ms1
                 __delay_ms0:
                +
0006bb ef8a     +LDI R24 , LOW ( 0xFA )
0006bc e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0006bd 9701     +SBIW R24 , 1
0006be f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0006bf 95a8      	wdr
0006c0 9711      	sbiw r26,1
0006c1 f7c9      	brne __delay_ms0
                 __delay_ms1:
0006c2 9508      	ret
                 
                 __ANEGF1:
0006c3 9730      	SBIW R30,0
0006c4 4060      	SBCI R22,0
0006c5 4070      	SBCI R23,0
0006c6 f009      	BREQ __ANEGF10
0006c7 5870      	SUBI R23,0x80
                 __ANEGF10:
0006c8 9508      	RET
                 
                 __ROUND_REPACK:
0006c9 2355      	TST  R21
0006ca f442      	BRPL __REPACK
0006cb 3850      	CPI  R21,0x80
0006cc f411      	BRNE __ROUND_REPACK0
0006cd ffe0      	SBRS R30,0
0006ce c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0006cf 9631      	ADIW R30,1
0006d0 1f69      	ADC  R22,R25
0006d1 1f79      	ADC  R23,R25
0006d2 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0006d3 e850      	LDI  R21,0x80
0006d4 2757      	EOR  R21,R23
0006d5 f411      	BRNE __REPACK0
0006d6 935f      	PUSH R21
0006d7 c0cf      	RJMP __ZERORES
                 __REPACK0:
0006d8 3f5f      	CPI  R21,0xFF
0006d9 f031      	BREQ __REPACK1
0006da 0f66      	LSL  R22
0006db 0c00      	LSL  R0
0006dc 9557      	ROR  R21
0006dd 9567      	ROR  R22
0006de 2f75      	MOV  R23,R21
0006df 9508      	RET
                 __REPACK1:
0006e0 935f      	PUSH R21
0006e1 2000      	TST  R0
0006e2 f00a      	BRMI __REPACK2
0006e3 c0cf      	RJMP __MAXRES
                 __REPACK2:
0006e4 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0006e5 e850      	LDI  R21,0x80
0006e6 2e19      	MOV  R1,R25
0006e7 2215      	AND  R1,R21
0006e8 0f88      	LSL  R24
0006e9 1f99      	ROL  R25
0006ea 2795      	EOR  R25,R21
0006eb 0f55      	LSL  R21
0006ec 9587      	ROR  R24
                 
                 __UNPACK1:
0006ed e850      	LDI  R21,0x80
0006ee 2e07      	MOV  R0,R23
0006ef 2205      	AND  R0,R21
0006f0 0f66      	LSL  R22
0006f1 1f77      	ROL  R23
0006f2 2775      	EOR  R23,R21
0006f3 0f55      	LSL  R21
0006f4 9567      	ROR  R22
0006f5 9508      	RET
                 
                 __CFD1U:
0006f6 9468      	SET
0006f7 c001      	RJMP __CFD1U0
                 __CFD1:
0006f8 94e8      	CLT
                 __CFD1U0:
0006f9 935f      	PUSH R21
0006fa dff2      	RCALL __UNPACK1
0006fb 3870      	CPI  R23,0x80
0006fc f018      	BRLO __CFD10
0006fd 3f7f      	CPI  R23,0xFF
0006fe f408      	BRCC __CFD10
0006ff c0a7      	RJMP __ZERORES
                 __CFD10:
000700 e156      	LDI  R21,22
000701 1b57      	SUB  R21,R23
000702 f4aa      	BRPL __CFD11
000703 9551      	NEG  R21
000704 3058      	CPI  R21,8
000705 f40e      	BRTC __CFD19
000706 3059      	CPI  R21,9
                 __CFD19:
000707 f030      	BRLO __CFD17
000708 efef      	SER  R30
000709 efff      	SER  R31
00070a ef6f      	SER  R22
00070b e77f      	LDI  R23,0x7F
00070c f977      	BLD  R23,7
00070d c01a      	RJMP __CFD15
                 __CFD17:
00070e 2777      	CLR  R23
00070f 2355      	TST  R21
000710 f0b9      	BREQ __CFD15
                 __CFD18:
000711 0fee      	LSL  R30
000712 1fff      	ROL  R31
000713 1f66      	ROL  R22
000714 1f77      	ROL  R23
000715 955a      	DEC  R21
000716 f7d1      	BRNE __CFD18
000717 c010      	RJMP __CFD15
                 __CFD11:
000718 2777      	CLR  R23
                 __CFD12:
000719 3058      	CPI  R21,8
00071a f028      	BRLO __CFD13
00071b 2fef      	MOV  R30,R31
00071c 2ff6      	MOV  R31,R22
00071d 2f67      	MOV  R22,R23
00071e 5058      	SUBI R21,8
00071f cff9      	RJMP __CFD12
                 __CFD13:
000720 2355      	TST  R21
000721 f031      	BREQ __CFD15
                 __CFD14:
000722 9576      	LSR  R23
000723 9567      	ROR  R22
000724 95f7      	ROR  R31
000725 95e7      	ROR  R30
000726 955a      	DEC  R21
000727 f7d1      	BRNE __CFD14
                 __CFD15:
000728 2000      	TST  R0
000729 f40a      	BRPL __CFD16
00072a d145      	RCALL __ANEGD1
                 __CFD16:
00072b 915f      	POP  R21
00072c 9508      	RET
                 
                 __CDF1U:
00072d 9468      	SET
00072e c001      	RJMP __CDF1U0
                 __CDF1:
00072f 94e8      	CLT
                 __CDF1U0:
000730 9730      	SBIW R30,0
000731 4060      	SBCI R22,0
000732 4070      	SBCI R23,0
000733 f0b1      	BREQ __CDF10
000734 2400      	CLR  R0
000735 f026      	BRTS __CDF11
000736 2377      	TST  R23
000737 f412      	BRPL __CDF11
000738 9400      	COM  R0
000739 d136      	RCALL __ANEGD1
                 __CDF11:
00073a 2e17      	MOV  R1,R23
00073b e17e      	LDI  R23,30
00073c 2011      	TST  R1
                 __CDF12:
00073d f032      	BRMI __CDF13
00073e 957a      	DEC  R23
00073f 0fee      	LSL  R30
000740 1fff      	ROL  R31
000741 1f66      	ROL  R22
000742 1c11      	ROL  R1
000743 cff9      	RJMP __CDF12
                 __CDF13:
000744 2fef      	MOV  R30,R31
000745 2ff6      	MOV  R31,R22
000746 2d61      	MOV  R22,R1
000747 935f      	PUSH R21
000748 df8a      	RCALL __REPACK
000749 915f      	POP  R21
                 __CDF10:
00074a 9508      	RET
                 
                 __SWAPACC:
00074b 934f      	PUSH R20
00074c 01af      	MOVW R20,R30
00074d 01fd      	MOVW R30,R26
00074e 01da      	MOVW R26,R20
00074f 01ab      	MOVW R20,R22
000750 01bc      	MOVW R22,R24
000751 01ca      	MOVW R24,R20
000752 2d40      	MOV  R20,R0
000753 2c01      	MOV  R0,R1
000754 2e14      	MOV  R1,R20
000755 914f      	POP  R20
000756 9508      	RET
                 
                 __UADD12:
000757 0fea      	ADD  R30,R26
000758 1ffb      	ADC  R31,R27
000759 1f68      	ADC  R22,R24
00075a 9508      	RET
                 
                 __NEGMAN1:
00075b 95e0      	COM  R30
00075c 95f0      	COM  R31
00075d 9560      	COM  R22
00075e 5fef      	SUBI R30,-1
00075f 4fff      	SBCI R31,-1
000760 4f6f      	SBCI R22,-1
000761 9508      	RET
                 
                 __SUBF12:
000762 935f      	PUSH R21
000763 df81      	RCALL __UNPACK
000764 3890      	CPI  R25,0x80
000765 f171      	BREQ __ADDF129
000766 e850      	LDI  R21,0x80
000767 2615      	EOR  R1,R21
                 
000768 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000769 935f      	PUSH R21
00076a df7a      	RCALL __UNPACK
00076b 3890      	CPI  R25,0x80
00076c f139      	BREQ __ADDF129
                 
                 __ADDF120:
00076d 3870      	CPI  R23,0x80
00076e f121      	BREQ __ADDF128
                 __ADDF121:
00076f 2f57      	MOV  R21,R23
000770 1b59      	SUB  R21,R25
000771 f12b      	BRVS __ADDF1211
000772 f412      	BRPL __ADDF122
000773 dfd7      	RCALL __SWAPACC
000774 cffa      	RJMP __ADDF121
                 __ADDF122:
000775 3158      	CPI  R21,24
000776 f018      	BRLO __ADDF123
000777 27aa      	CLR  R26
000778 27bb      	CLR  R27
000779 2788      	CLR  R24
                 __ADDF123:
00077a 3058      	CPI  R21,8
00077b f028      	BRLO __ADDF124
00077c 2fab      	MOV  R26,R27
00077d 2fb8      	MOV  R27,R24
00077e 2788      	CLR  R24
00077f 5058      	SUBI R21,8
000780 cff9      	RJMP __ADDF123
                 __ADDF124:
000781 2355      	TST  R21
000782 f029      	BREQ __ADDF126
                 __ADDF125:
000783 9586      	LSR  R24
000784 95b7      	ROR  R27
000785 95a7      	ROR  R26
000786 955a      	DEC  R21
000787 f7d9      	BRNE __ADDF125
                 __ADDF126:
000788 2d50      	MOV  R21,R0
000789 2551      	EOR  R21,R1
00078a f072      	BRMI __ADDF127
00078b dfcb      	RCALL __UADD12
00078c f438      	BRCC __ADDF129
00078d 9567      	ROR  R22
00078e 95f7      	ROR  R31
00078f 95e7      	ROR  R30
000790 9573      	INC  R23
000791 f413      	BRVC __ADDF129
000792 c020      	RJMP __MAXRES
                 __ADDF128:
000793 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000794 df3e      	RCALL __REPACK
000795 915f      	POP  R21
000796 9508      	RET
                 __ADDF1211:
000797 f7d8      	BRCC __ADDF128
000798 cffb      	RJMP __ADDF129
                 __ADDF127:
000799 1bea      	SUB  R30,R26
00079a 0bfb      	SBC  R31,R27
00079b 0b68      	SBC  R22,R24
00079c f051      	BREQ __ZERORES
00079d f410      	BRCC __ADDF1210
00079e 9400      	COM  R0
00079f dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007a0 2366      	TST  R22
0007a1 f392      	BRMI __ADDF129
0007a2 0fee      	LSL  R30
0007a3 1fff      	ROL  R31
0007a4 1f66      	ROL  R22
0007a5 957a      	DEC  R23
0007a6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007a7 27ee      	CLR  R30
0007a8 27ff      	CLR  R31
0007a9 2766      	CLR  R22
0007aa 2777      	CLR  R23
0007ab 915f      	POP  R21
0007ac 9508      	RET
                 
                 __MINRES:
0007ad efef      	SER  R30
0007ae efff      	SER  R31
0007af e76f      	LDI  R22,0x7F
0007b0 ef7f      	SER  R23
0007b1 915f      	POP  R21
0007b2 9508      	RET
                 
                 __MAXRES:
0007b3 efef      	SER  R30
0007b4 efff      	SER  R31
0007b5 e76f      	LDI  R22,0x7F
0007b6 e77f      	LDI  R23,0x7F
0007b7 915f      	POP  R21
0007b8 9508      	RET
                 
                 __MULF12:
0007b9 935f      	PUSH R21
0007ba df2a      	RCALL __UNPACK
0007bb 3870      	CPI  R23,0x80
0007bc f351      	BREQ __ZERORES
0007bd 3890      	CPI  R25,0x80
0007be f341      	BREQ __ZERORES
0007bf 2401      	EOR  R0,R1
0007c0 9408      	SEC
0007c1 1f79      	ADC  R23,R25
0007c2 f423      	BRVC __MULF124
0007c3 f31c      	BRLT __ZERORES
                 __MULF125:
0007c4 2000      	TST  R0
0007c5 f33a      	BRMI __MINRES
0007c6 cfec      	RJMP __MAXRES
                 __MULF124:
0007c7 920f      	PUSH R0
0007c8 931f      	PUSH R17
0007c9 932f      	PUSH R18
0007ca 933f      	PUSH R19
0007cb 934f      	PUSH R20
0007cc 2711      	CLR  R17
0007cd 2722      	CLR  R18
0007ce 2799      	CLR  R25
0007cf 9f68      	MUL  R22,R24
0007d0 01a0      	MOVW R20,R0
0007d1 9f8f      	MUL  R24,R31
0007d2 2d30      	MOV  R19,R0
0007d3 0d41      	ADD  R20,R1
0007d4 1f59      	ADC  R21,R25
0007d5 9f6b      	MUL  R22,R27
0007d6 0d30      	ADD  R19,R0
0007d7 1d41      	ADC  R20,R1
0007d8 1f59      	ADC  R21,R25
0007d9 9f8e      	MUL  R24,R30
0007da d027      	RCALL __MULF126
0007db 9fbf      	MUL  R27,R31
0007dc d025      	RCALL __MULF126
0007dd 9f6a      	MUL  R22,R26
0007de d023      	RCALL __MULF126
0007df 9fbe      	MUL  R27,R30
0007e0 d01d      	RCALL __MULF127
0007e1 9faf      	MUL  R26,R31
0007e2 d01b      	RCALL __MULF127
0007e3 9fae      	MUL  R26,R30
0007e4 0d11      	ADD  R17,R1
0007e5 1f29      	ADC  R18,R25
0007e6 1f39      	ADC  R19,R25
0007e7 1f49      	ADC  R20,R25
0007e8 1f59      	ADC  R21,R25
0007e9 2fe3      	MOV  R30,R19
0007ea 2ff4      	MOV  R31,R20
0007eb 2f65      	MOV  R22,R21
0007ec 2f52      	MOV  R21,R18
0007ed 914f      	POP  R20
0007ee 913f      	POP  R19
0007ef 912f      	POP  R18
0007f0 911f      	POP  R17
0007f1 900f      	POP  R0
0007f2 2366      	TST  R22
0007f3 f02a      	BRMI __MULF122
0007f4 0f55      	LSL  R21
0007f5 1fee      	ROL  R30
0007f6 1fff      	ROL  R31
0007f7 1f66      	ROL  R22
0007f8 c002      	RJMP __MULF123
                 __MULF122:
0007f9 9573      	INC  R23
0007fa f24b      	BRVS __MULF125
                 __MULF123:
0007fb decd      	RCALL __ROUND_REPACK
0007fc 915f      	POP  R21
0007fd 9508      	RET
                 
                 __MULF127:
0007fe 0d10      	ADD  R17,R0
0007ff 1d21      	ADC  R18,R1
000800 1f39      	ADC  R19,R25
000801 c002      	RJMP __MULF128
                 __MULF126:
000802 0d20      	ADD  R18,R0
000803 1d31      	ADC  R19,R1
                 __MULF128:
000804 1f49      	ADC  R20,R25
000805 1f59      	ADC  R21,R25
000806 9508      	RET
                 
                 __DIVF21:
000807 935f      	PUSH R21
000808 dedc      	RCALL __UNPACK
000809 3870      	CPI  R23,0x80
00080a f421      	BRNE __DIVF210
00080b 2011      	TST  R1
                 __DIVF211:
00080c f40a      	BRPL __DIVF219
00080d cf9f      	RJMP __MINRES
                 __DIVF219:
00080e cfa4      	RJMP __MAXRES
                 __DIVF210:
00080f 3890      	CPI  R25,0x80
000810 f409      	BRNE __DIVF218
                 __DIVF217:
000811 cf95      	RJMP __ZERORES
                 __DIVF218:
000812 2401      	EOR  R0,R1
000813 9408      	SEC
000814 0b97      	SBC  R25,R23
000815 f41b      	BRVC __DIVF216
000816 f3d4      	BRLT __DIVF217
000817 2000      	TST  R0
000818 cff3      	RJMP __DIVF211
                 __DIVF216:
000819 2f79      	MOV  R23,R25
00081a 931f      	PUSH R17
00081b 932f      	PUSH R18
00081c 933f      	PUSH R19
00081d 934f      	PUSH R20
00081e 2411      	CLR  R1
00081f 2711      	CLR  R17
000820 2722      	CLR  R18
000821 2733      	CLR  R19
000822 2744      	CLR  R20
000823 2755      	CLR  R21
000824 e290      	LDI  R25,32
                 __DIVF212:
000825 17ae      	CP   R26,R30
000826 07bf      	CPC  R27,R31
000827 0786      	CPC  R24,R22
000828 0741      	CPC  R20,R17
000829 f030      	BRLO __DIVF213
00082a 1bae      	SUB  R26,R30
00082b 0bbf      	SBC  R27,R31
00082c 0b86      	SBC  R24,R22
00082d 0b41      	SBC  R20,R17
00082e 9408      	SEC
00082f c001      	RJMP __DIVF214
                 __DIVF213:
000830 9488      	CLC
                 __DIVF214:
000831 1f55      	ROL  R21
000832 1f22      	ROL  R18
000833 1f33      	ROL  R19
000834 1c11      	ROL  R1
000835 1faa      	ROL  R26
000836 1fbb      	ROL  R27
000837 1f88      	ROL  R24
000838 1f44      	ROL  R20
000839 959a      	DEC  R25
00083a f751      	BRNE __DIVF212
00083b 01f9      	MOVW R30,R18
00083c 2d61      	MOV  R22,R1
00083d 914f      	POP  R20
00083e 913f      	POP  R19
00083f 912f      	POP  R18
000840 911f      	POP  R17
000841 2366      	TST  R22
000842 f032      	BRMI __DIVF215
000843 0f55      	LSL  R21
000844 1fee      	ROL  R30
000845 1fff      	ROL  R31
000846 1f66      	ROL  R22
000847 957a      	DEC  R23
000848 f243      	BRVS __DIVF217
                 __DIVF215:
000849 de7f      	RCALL __ROUND_REPACK
00084a 915f      	POP  R21
00084b 9508      	RET
                 
                 __CMPF12:
00084c 2399      	TST  R25
00084d f09a      	BRMI __CMPF120
00084e 2377      	TST  R23
00084f f042      	BRMI __CMPF121
000850 1797      	CP   R25,R23
000851 f048      	BRLO __CMPF122
000852 f429      	BRNE __CMPF121
000853 17ae      	CP   R26,R30
000854 07bf      	CPC  R27,R31
000855 0786      	CPC  R24,R22
000856 f020      	BRLO __CMPF122
000857 f031      	BREQ __CMPF123
                 __CMPF121:
000858 9498      	CLZ
000859 9488      	CLC
00085a 9508      	RET
                 __CMPF122:
00085b 9498      	CLZ
00085c 9408      	SEC
00085d 9508      	RET
                 __CMPF123:
00085e 9418      	SEZ
00085f 9488      	CLC
000860 9508      	RET
                 __CMPF120:
000861 2377      	TST  R23
000862 f7c2      	BRPL __CMPF122
000863 1797      	CP   R25,R23
000864 f398      	BRLO __CMPF121
000865 f7a9      	BRNE __CMPF122
000866 17ea      	CP   R30,R26
000867 07fb      	CPC  R31,R27
000868 0768      	CPC  R22,R24
000869 f388      	BRLO __CMPF122
00086a f399      	BREQ __CMPF123
00086b cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00086c 2400      	CLR  R0
00086d 0daf      	ADD  R26,R15
00086e 1db0      	ADC  R27,R0
00086f 9508      	RET
                 
                 __ANEGD1:
000870 95f0      	COM  R31
000871 9560      	COM  R22
000872 9570      	COM  R23
000873 95e1      	NEG  R30
000874 4fff      	SBCI R31,-1
000875 4f6f      	SBCI R22,-1
000876 4f7f      	SBCI R23,-1
000877 9508      	RET
                 
                 __CBD1:
000878 2ffe      	MOV  R31,R30
000879 0fff      	ADD  R31,R31
00087a 0bff      	SBC  R31,R31
00087b 2f6f      	MOV  R22,R31
00087c 2f7f      	MOV  R23,R31
00087d 9508      	RET
                 
                 __CWD1:
00087e 2f6f      	MOV  R22,R31
00087f 0f66      	ADD  R22,R22
000880 0b66      	SBC  R22,R22
000881 2f76      	MOV  R23,R22
000882 9508      	RET
                 
                 __DIVB21U:
000883 2400      	CLR  R0
000884 e098      	LDI  R25,8
                 __DIVB21U1:
000885 0faa      	LSL  R26
000886 1c00      	ROL  R0
000887 1a0e      	SUB  R0,R30
000888 f410      	BRCC __DIVB21U2
000889 0e0e      	ADD  R0,R30
00088a c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00088b 60a1      	SBR  R26,1
                 __DIVB21U3:
00088c 959a      	DEC  R25
00088d f7b9      	BRNE __DIVB21U1
00088e 2fea      	MOV  R30,R26
00088f 2da0      	MOV  R26,R0
000890 9508      	RET
                 
                 __DIVB21:
000891 d039      	RCALL __CHKSIGNB
000892 dff0      	RCALL __DIVB21U
000893 f40e      	BRTC __DIVB211
000894 95e1      	NEG  R30
                 __DIVB211:
000895 9508      	RET
                 
                 __DIVD21U:
000896 933f      	PUSH R19
000897 934f      	PUSH R20
000898 935f      	PUSH R21
000899 2400      	CLR  R0
00089a 2411      	CLR  R1
00089b 2744      	CLR  R20
00089c 2755      	CLR  R21
00089d e230      	LDI  R19,32
                 __DIVD21U1:
00089e 0faa      	LSL  R26
00089f 1fbb      	ROL  R27
0008a0 1f88      	ROL  R24
0008a1 1f99      	ROL  R25
0008a2 1c00      	ROL  R0
0008a3 1c11      	ROL  R1
0008a4 1f44      	ROL  R20
0008a5 1f55      	ROL  R21
0008a6 1a0e      	SUB  R0,R30
0008a7 0a1f      	SBC  R1,R31
0008a8 0b46      	SBC  R20,R22
0008a9 0b57      	SBC  R21,R23
0008aa f428      	BRCC __DIVD21U2
0008ab 0e0e      	ADD  R0,R30
0008ac 1e1f      	ADC  R1,R31
0008ad 1f46      	ADC  R20,R22
0008ae 1f57      	ADC  R21,R23
0008af c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008b0 60a1      	SBR  R26,1
                 __DIVD21U3:
0008b1 953a      	DEC  R19
0008b2 f759      	BRNE __DIVD21U1
0008b3 01fd      	MOVW R30,R26
0008b4 01bc      	MOVW R22,R24
0008b5 01d0      	MOVW R26,R0
0008b6 01ca      	MOVW R24,R20
0008b7 915f      	POP  R21
0008b8 914f      	POP  R20
0008b9 913f      	POP  R19
0008ba 9508      	RET
                 
                 __MODB21:
0008bb 94e8      	CLT
0008bc ffa7      	SBRS R26,7
0008bd c002      	RJMP __MODB211
0008be 95a1      	NEG  R26
0008bf 9468      	SET
                 __MODB211:
0008c0 fde7      	SBRC R30,7
0008c1 95e1      	NEG  R30
0008c2 dfc0      	RCALL __DIVB21U
0008c3 2fea      	MOV  R30,R26
0008c4 f40e      	BRTC __MODB212
0008c5 95e1      	NEG  R30
                 __MODB212:
0008c6 9508      	RET
                 
                 __MODD21U:
0008c7 dfce      	RCALL __DIVD21U
0008c8 01fd      	MOVW R30,R26
0008c9 01bc      	MOVW R22,R24
0008ca 9508      	RET
                 
                 __CHKSIGNB:
0008cb 94e8      	CLT
0008cc ffe7      	SBRS R30,7
0008cd c002      	RJMP __CHKSB1
0008ce 95e1      	NEG  R30
0008cf 9468      	SET
                 __CHKSB1:
0008d0 ffa7      	SBRS R26,7
0008d1 c004      	RJMP __CHKSB2
0008d2 95a1      	NEG  R26
0008d3 f800      	BLD  R0,0
0008d4 9403      	INC  R0
0008d5 fa00      	BST  R0,0
                 __CHKSB2:
0008d6 9508      	RET
                 
                 __GETW1P:
0008d7 91ed      	LD   R30,X+
0008d8 91fc      	LD   R31,X
0008d9 9711      	SBIW R26,1
0008da 9508      	RET
                 
                 __GETD1P:
0008db 91ed      	LD   R30,X+
0008dc 91fd      	LD   R31,X+
0008dd 916d      	LD   R22,X+
0008de 917c      	LD   R23,X
0008df 9713      	SBIW R26,3
0008e0 9508      	RET
                 
                 __GETD1S0:
0008e1 81e8      	LD   R30,Y
0008e2 81f9      	LDD  R31,Y+1
0008e3 816a      	LDD  R22,Y+2
0008e4 817b      	LDD  R23,Y+3
0008e5 9508      	RET
                 
                 __GETD2S0:
0008e6 81a8      	LD   R26,Y
0008e7 81b9      	LDD  R27,Y+1
0008e8 818a      	LDD  R24,Y+2
0008e9 819b      	LDD  R25,Y+3
0008ea 9508      	RET
                 
                 __PUTD1S0:
0008eb 83e8      	ST   Y,R30
0008ec 83f9      	STD  Y+1,R31
0008ed 836a      	STD  Y+2,R22
0008ee 837b      	STD  Y+3,R23
0008ef 9508      	RET
                 
                 __PUTPARD1:
0008f0 937a      	ST   -Y,R23
0008f1 936a      	ST   -Y,R22
0008f2 93fa      	ST   -Y,R31
0008f3 93ea      	ST   -Y,R30
0008f4 9508      	RET
                 
                 __PUTPARD2:
0008f5 939a      	ST   -Y,R25
0008f6 938a      	ST   -Y,R24
0008f7 93ba      	ST   -Y,R27
0008f8 93aa      	ST   -Y,R26
0008f9 9508      	RET
                 
                 __SWAPD12:
0008fa 2e18      	MOV  R1,R24
0008fb 2f86      	MOV  R24,R22
0008fc 2d61      	MOV  R22,R1
0008fd 2e19      	MOV  R1,R25
0008fe 2f97      	MOV  R25,R23
0008ff 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000900 2e1b      	MOV  R1,R27
000901 2fbf      	MOV  R27,R31
000902 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000903 2e1a      	MOV  R1,R26
000904 2fae      	MOV  R26,R30
000905 2de1      	MOV  R30,R1
000906 9508      	RET
                 
                 __CPD10:
000907 9730      	SBIW R30,0
000908 4060      	SBCI R22,0
000909 4070      	SBCI R23,0
00090a 9508      	RET
                 
                 __SAVELOCR6:
00090b 935a      	ST   -Y,R21
                 __SAVELOCR5:
00090c 934a      	ST   -Y,R20
                 __SAVELOCR4:
00090d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00090e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00090f 931a      	ST   -Y,R17
000910 930a      	ST   -Y,R16
000911 9508      	RET
                 
                 __LOADLOCR6:
000912 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000913 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000914 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000915 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000916 8119      	LDD  R17,Y+1
000917 8108      	LD   R16,Y
000918 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  51 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 110 r23:  95 
r24:  77 r25:  59 r26: 210 r27:  92 r28:  33 r29:   1 r30: 378 r31: 142 
x  :  40 y  : 374 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  61 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 161 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  47 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  19 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   4 inc   :   5 jmp   :  23 ld    :  51 ldd   : 195 ldi   : 199 
lds   :   0 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 movw  :  53 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  20 pop   :  22 push  :  22 rcall :  87 ret   :  90 
reti  :   0 rjmp  : 136 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  28 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  95 std   :  86 sts   :   2 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001232   4606     52   4658   16384  28.4%
[.dseg] 0x000060 0x00016a      0     10     10    1024   1.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
